// Возвращает  название дня недели по его номеру //
Функция ДеньНеделиПоНомеру (НомерДня) Экспорт
	
	Возврат "" + ОбщийМодульСервер.ДеньНеделиПоНомеру(НомерДня);
			
КонецФункции	

Функция ЗафиксироватьМестоположение (Документ = Неопределено, Событие = "") Экспорт
	#Если МобильноеПриложениеКлиент Тогда
	Попытка	
		ОбщийМодульСервер.ЗафиксироватьМестоположениеСервер(Документ,Событие);
	Исключение
		УстановитьИЗапуститьСлужбу();
		Попытка
			ОбщийМодульСервер.ЗафиксироватьМестоположениеСервер(Документ,Событие);
		Исключение
			Сообщить("" + ОписаниеОшибки());
		КонецПопытки;
	КонецПопытки;
	#КонецЕсли 
КонецФункции	

#ЕСЛИ МОБИЛЬНОЕПРИЛОЖЕНИЕКЛИЕНТ ТОГДА
	
// Сейчас чтение производим через сервер //
Функция ПрочитатьКоординатыАгента () Экспорт
	
	Продолжать = ЛОЖЬ;
	
	Если Не ОбщийМодульСервер.ПользовательЗарегистрирован() Тогда
		Возврат ЛОЖЬ;
	КонецЕсли;	
	
	КоличествоЗаписей = 50;
	
	Запуск          = Новый ЗапускПриложенияМобильногоУстройства;	
	Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
	Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION"     ,"READ_GPS");
	Запуск.ДополнительныеДанные.Добавить("ACTION_PARAMETER_STR",Строка(КоличествоЗаписей));
	
	ИдДляУдаления = "";
	
	Рез = Запуск.Запустить(Истина);
	Если Рез = -1 Тогда
		Данные = Запуск.ДополнительныеДанные.Получить("RESULT");
		Если Данные <> Неопределено Тогда
			Массив = ОбщийМодульСервер.БыстрыйПарсингМассиваJSON(Данные.Значение);
			Для Каждого Эл Из Массив Цикл
				ИдДляУдаления = ИдДляУдаления + ?(ПустаяСтрока(ИдДляУдаления),"",",") + Эл.ID;
				
				Стр = ОбщийМодульСервер.МэппингСтруктурКоординатСервер(Эл);
				ОбщийМодульСервер.ЗаписатьМестоположениеСервер(Стр,,);
				
			КонецЦикла;	
			
			Если КоличествоЗаписей = Массив.Количество() Тогда
				Продолжать = Истина;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
	ИдДляУдаления = "[" + ИдДляУдаления + "]";
	
	Запуск          = Новый ЗапускПриложенияМобильногоУстройства;
	Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
	Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION"     ,"DELETEGPSBUID");
	Запуск.ДополнительныеДанные.Добавить("ACTION_PARAMETER_STR",ИдДляУдаления);
	
	Рез = Запуск.Запустить(Истина);
	Если Рез = -1 Тогда
		Данные = Запуск.ДополнительныеДанные.Получить("RESULT");
	Иначе 
		Продолжать = Ложь;
	КонецЕсли;	
	
	Возврат Продолжать;	
КонецФункции	

Функция ПолучитьТекущиеКоординаты () Экспорт
	
	Запуск          = Новый ЗапускПриложенияМобильногоУстройства;
	Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
	Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION","GETCURRENTGPS");
	
	Рез = Запуск.Запустить(Истина);
	Если Рез = -1 Тогда
		Данные = Запуск.ДополнительныеДанные.Получить("RESULT");
		Если Данные <> Неопределено Тогда
			Рез = ОбщийМодульСервер.БыстрыйПарсингСтруктурыJSON(Данные.Значение);
 			Возврат Рез;
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции

#КОНЕЦЕСЛИ 

Процедура УстановитьИЗапуститьСлужбу () Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		Если ВерсияСлужб() < 11 Тогда
			Путь = КаталогВременныхФайлов() + "/agent1c.apk";
			ОбщийМодульСервер.УстановитьУтилитыСервер(Путь);
			ЗапуститьПриложение(Путь,,Истина);
			// Повторная проверка //
			Если ВерсияСлужб() < 11 Тогда
				Сообщить("Агент не установлен!");
				Возврат;
			КонецЕсли;	
		КонецЕсли;			
		
		// Применяем настройки и запускаем приложение //	
		СтрокаЗапуска = "{""interval"":%1,""starttime"":%2,""endtime"":%3}";
		
		Интервал = ОбщийМодульСервер.ПолучитьЗначениеКонстанты("ПериодичностьРегистрацииКоординат");
		Если Интервал = 0 Тогда
			Интервал = 5000;
		Иначе
			Интервал = Интервал * 1000;
		КонецЕсли;	
		
		НачалоАктивности = ОбщийМодульСервер.ПолучитьЗначениеКонстанты("ОС_ВремяНачалаЗаписиАктивностей");
		Если Не ЗначениеЗаполнено(НачалоАктивности) Тогда
			НачалоАктивности = Дата(1,1,1,08,0,0);
		КонецЕсли;
		
		НачалоАктивности = ОбщийМодульСервер.РазностьДатВСекундах(НачалоАктивности) * 1000;
		
		КонецАктивности = ОбщийМодульСервер.ПолучитьЗначениеКонстанты("ОС_ВремяОкончанияЗаписиАктивностей");
		Если Не ЗначениеЗаполнено(НачалоАктивности) Тогда
			КонецАктивности = Дата(1,1,1,19,0,0);
		КонецЕсли;
		
		КонецАктивности = ОбщийМодульСервер.РазностьДатВСекундах(КонецАктивности) * 1000;
		
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска,"%1",Формат(Интервал        ,"ЧДЦ=; ЧН=0; ЧГ="));
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска,"%2",Формат(НачалоАктивности,"ЧДЦ=; ЧН=0; ЧГ="));
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска,"%3",Формат(КонецАктивности ,"ЧДЦ=; ЧН=0; ЧГ="));
		
		Попытка
			ОбщийМодульСервер.ПерезапускСлужбСервер(СтрокаЗапуска);
		Исключение	
			Запуск          = Новый ЗапускПриложенияМобильногоУстройства;	
			Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
			Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION"     ,"APPLYSETTINGS");
			Запуск.ДополнительныеДанные.Добавить("ACTION_PARAMETER_STR",СтрокаЗапуска);
			Рез = Запуск.Запустить(Истина);
		КонецПопытки;
		
		Попытка
			ОбщийМодульСервер.УстановитьЗначениеКонстанты("ВерсияСлужбы", ВерсияСлужб());
		Исключение
		КонецПопытки;
		Попытка
			ОбщийМодульСервер.УстановитьЗначениеКонстанты("МодельПланшета", МодельПланшета());
		Исключение
		КонецПопытки;
		
	#КонецЕсли 
КонецПроцедуры	

Функция ВерсияСлужб () Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		// Проверяем установлена ли служба на устройстве //
		Попытка
			Рез = ОбщийМодульСервер.ВерсияСлужбСервер();
			Возврат Число(Рез);
		Исключение
			Запуск          = Новый ЗапускПриложенияМобильногоУстройства;	
			Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
			Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION","GETVERSION");
			Рез = Запуск.Запустить(Истина);
			Если Рез = -1 Тогда
				НомерВерсии = Запуск.ДополнительныеДанные.Получить("RESULT");
				Возврат Число(НомерВерсии.Значение);
			Иначе
				Возврат 0;
			КонецЕсли;
		КонецПопытки;	
	#Иначе
		Возврат 0;
	#КонецЕсли 
КонецФункции	

Функция МодельПланшета () Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		// Проверяем установлена ли служба на устройстве //
		Попытка
			Рез = ОбщийМодульСервер.МодельПланшетаСервер();
			Возврат Рез;
		Исключение
			Запуск          = Новый ЗапускПриложенияМобильногоУстройства;	
			Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
			Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION","GETMODELDEVICE");
			Рез = Запуск.Запустить(Истина);
			Если Рез = -1 Тогда
				Модель = Запуск.ДополнительныеДанные.Получить("RESULT");
				Возврат Модель.Значение;
			Иначе
				Возврат "";
			КонецЕсли;
		КонецПопытки;	
	#Иначе
		Возврат "";
	#КонецЕсли 
КонецФункции	

Функция ЗарядБатареи () Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		// Проверяем установлена ли служба на устройстве //
		Попытка
			Рез = ОбщийМодульСервер.ЗарядБатареиСервер();
			Возврат Рез;
		Исключение
			Запуск          = Новый ЗапускПриложенияМобильногоУстройства;	
			Запуск.Действие = "evgeniy.v.bystrov.agent1c.EXCHANGE";
			Запуск.ДополнительныеДанные.Добавить("EXCHANGE_ACTION","GETBATTERYLEVEL");
			Рез = Запуск.Запустить(Истина);
			Если Рез = -1 Тогда
				НомерВерсии = Запуск.ДополнительныеДанные.Получить("RESULT");
				Возврат НомерВерсии.Значение;
			Иначе
				Возврат 0;
			КонецЕсли;
		КонецПопытки;	
	#Иначе
		Возврат 0;
	#КонецЕсли 
КонецФункции	

// ОБНОВЛЕНИЕ КОНФИГУРАЦИИ //

Процедура ОбновитьКонфигурацию (ТипПроцессора) Экспорт
	ДопПараметры = Новый Массив;
	ДопПараметры.Добавить(ТипПроцессора);
	Парам = Новый Структура;
	Парам.Вставить("ИмяПроцедуры"    ,"ОбщийМодульСервер.ОбновитьКонфигурацию");
	Парам.Вставить("ЗаголовокФормы"  ,"Загрузка обновления");
	Парам.Вставить("ВернутьРезультат",Истина);
	Парам.Вставить("ДопПараметры"    ,ПоместитьВоВременноеХранилище(ДопПараметры,Новый УникальныйИдентификатор));
	ОткрытьФорму("ОбщаяФорма.ФормаДлительнойОперации",Парам);
КонецПроцедуры	

Процедура ОчисткаБазыДанных () Экспорт
	ФоновыеЗаданияСервер.ОстановитьВсеФоновыеЗадания();
	Парам = Новый Структура;
	Парам.Вставить("ИмяПроцедуры"    , "ОбщийМодульСервер.ОчисткаБазыДанных");
	Парам.Вставить("ЗаголовокФормы"  , "Очистка базы данных");
	Парам.Вставить("ВернутьРезультат", Ложь);
	ОткрытьФорму("ОбщаяФорма.ФормаДлительнойОперации",Парам);
КонецПроцедуры	

#ОБЛАСТЬ ОПТИМИЗАЦИЯБД



//при аварийном завершении могут оставаться фото в папке temp каталога программы
Процедура ОчиститьВременныеФайлы() Экспорт
	
	#ЕСЛИ МОБИЛЬНОЕПРИЛОЖЕНИЕКЛИЕНТ ТОГДА
		
	Попытка
		УдалитьФайлы(КаталогВременныхФайлов(), "*.png");
	Исключение
    	Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	#КОНЕЦЕСЛИ

КонецПроцедуры


#КОНЕЦОБЛАСТИ