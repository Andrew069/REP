
Функция УчастиеКонтрагентаВАкциях(Контрагент, ДатаОтгрузки, ТипТМАкции = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.Приоритет,
		|	Таблица.ТипТМАкции
		|ПОМЕСТИТЬ Приоритеты
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТМАкции.Акция КАК Акция,
		|	ТМАкции.Акция.ТипТрейдМаркетинговойАкций КАК ТипТМАкции,
		|	Приоритеты.Приоритет КАК Приоритет,
		|	ТМАкции.Акция.АкцияВыходнгогоДня КАК АкцияВыходнгогоДня,
		|	ТМАкции.Ссылка КАК УчастникиТрейдМаркетинговыхАкций
		|ИЗ
		|	Документ.УчастникиТрейдМаркетинговыхАкций КАК ТМАкции
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УчастникиТрейдМаркетинговыхАкций.УчастникиАкции КАК УчастникиТМАкции
		|		ПО ТМАкции.Ссылка = УчастникиТМАкции.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Приоритеты КАК Приоритеты
		|		ПО ТМАкции.Акция.ТипТрейдМаркетинговойАкций = Приоритеты.ТипТМАкции
		|ГДЕ
		|	ТМАкции.Проведен
		|	И ТМАкции.Акция.Проведен
		|	И &ДатаОтгрузки МЕЖДУ ТМАкции.Акция.ПериодПроведенияДатаНачала И ТМАкции.Акция.ПериодПроведенияДатаОкончания
		|	И ТМАкции.Акция.НеАктивна = ЛОЖЬ
		|	И (ТМАкции.Акция.ТипТрейдМаркетинговойАкций = &ТипТМАкции
		|			ИЛИ &ВсеТипы)
		|	И (НЕ ТМАкции.ВсеКонтрагенты
		|				И (УчастникиТМАкции.Контрагент = &Контрагент
		|					ИЛИ УчастникиТМАкции.КаналСбыта = &КаналСбыта
		|						И &ОтборПоКС
		|					ИЛИ УчастникиТМАкции.СетьБренд = &СетьБренд
		|						И &ОтборПоСБ)
		|			ИЛИ ТМАкции.ВсеКонтрагенты
		|				И (НЕ УчастникиТМАкции.Контрагент = &Контрагент
		|					ИЛИ НЕ УчастникиТМАкции.КаналСбыта = &КаналСбыта
		|					ИЛИ НЕ УчастникиТМАкции.СетьБренд = &СетьБренд))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("Таблица",		 ПолучитьТаблицуПриоритетовАкций());	
	Запрос.УстановитьПараметр("Контрагент",		 Контрагент);
	Запрос.УстановитьПараметр("ОтборПоКС",		 ЗначениеЗаполнено(Контрагент.КаналСбыта));
	Запрос.УстановитьПараметр("ОтборПоСБ",		 ЗначениеЗаполнено(Контрагент.СетьБренд));	
	Запрос.УстановитьПараметр("КаналСбыта",		 Контрагент.КаналСбыта);
	Запрос.УстановитьПараметр("СетьБренд",		 Контрагент.СетьБренд);
	Запрос.УстановитьПараметр("ДатаОтгрузки",	 ДатаОтгрузки);
	Запрос.УстановитьПараметр("ТипТМАкции",		 ТипТМАкции);
	Запрос.УстановитьПараметр("ВсеТипы",		 (ТипТМАкции = Неопределено));

	//Возврат Запрос.Выполнить().Выгрузить();
	
	ТаблицаАкций = Запрос.Выполнить().Выгрузить();

	СтрокиАкцийВыходногоДня = ТаблицаАкций.НайтиСтроки(Новый Структура("АкцияВыходнгогоДня", Истина));
	
	Если СтрокиАкцийВыходногоДня.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОС_ДанныеПродажДляМП.ПродажиСумма
		               |ИЗ
		               |	РегистрСведений.ОС_ДанныеПродажДляМП КАК ОС_ДанныеПродажДляМП
		               |ГДЕ
		               |	ОС_ДанныеПродажДляМП.Контрагент = &Контрагент
		               |	И ОС_ДанныеПродажДляМП.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, НЕДЕЛЯ) И КОНЕЦПЕРИОДА(&Дата, НЕДЕЛЯ)";
				
		Запрос.УстановитьПараметр("Дата", ДатаОтгрузки);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Для Каждого СтрокиАкцийВыходногоДня Из СтрокиАкцийВыходногоДня Цикл
				ТаблицаАкций.Удалить(СтрокиАкцийВыходногоДня);
			КонецЦикла;
		КонецЕсли;	
		
	КонецЕсли;	

	ТаблицаАкций.Колонки.Добавить("Исключение");
	Для Каждого СтрокаТЗ Из ТаблицаАкций Цикл
		ДокУчастникиТМА = СтрокаТЗ.УчастникиТрейдМаркетинговыхАкций;
		Если ДокУчастникиТМА.Исключения.НайтиСтроки(Новый Структура("Контрагент", Контрагент)).Количество()>0 Тогда
			 СтрокаТЗ.Исключение = Истина
		Иначе
			 СтрокаТЗ.Исключение = Ложь
		КонецЕсли;	
	КонецЦикла;	
	СтрокиДляУдаления = ТаблицаАкций.НайтиСтроки(Новый Структура("Исключение", Истина));
	Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
		ТаблицаАкций.Удалить(СтрокаДляУдаления)
	КонецЦикла;
	
	Возврат ТаблицаАкций;
	
КонецФункции

Функция УсловияАкцииCкидкаЗаОбъем(СписокАкций, СписокНоменклатуры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТМАкции.Ссылка КАК Акция,
	|	ТМАкции.Количество КАК Количество,
	|	ТМАкции.ЦенаСНДС КАК Цена,
	|	ТМАкции.Номенклатура КАК Номенклатура,
	|	ТМАкции.Номенклатура.Код КАК Код,
	|	ТМАкции.Номенклатура.Артикул КАК Артикул,
	|	ТМАкции.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	|	ТМАкции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
	//|	ТМАкции.Номенклатура.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест
	|ИЗ
	|	Документ.ТрейдМаркетинговаяАкция.ТабличнаяЧасть1 КАК ТМАкции
	|ГДЕ
	|	ТМАкции.Ссылка В(&СписокАкций)
	|	И (ТМАкции.Номенклатура В (&СписокНоменклатуры)
	|			ИЛИ &ВсяНоменклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Количество
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("СписокАкций",		СписокАкций);
	Запрос.УстановитьПараметр("СписокНоменклатуры",	СписокНоменклатуры);
	Запрос.УстановитьПараметр("ВсяНоменклатура", (СписокНоменклатуры = Неопределено));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция УсловияАкцииПалетнаяОтгрузка(СписокАкций, СписокНоменклатуры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТМАкции.Ссылка КАК Акция,
	|	ТМАкции.Количество КАК Количество,
	|	ТМАкции.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.ТрейдМаркетинговаяАкция.ТабличнаяЧасть1 КАК ТМАкции
	|ГДЕ
	|	ТМАкции.Ссылка В(&СписокАкций)
	|	И (ТМАкции.Номенклатура В (&СписокНоменклатуры)
	|			ИЛИ &ВсяНоменклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Количество
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("СписокАкций",		СписокАкций);
	Запрос.УстановитьПараметр("СписокНоменклатуры",	СписокНоменклатуры);
	Запрос.УстановитьПараметр("ВсяНоменклатура", (СписокНоменклатуры = Неопределено));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция УсловияАкцииПриЗаказеXКоличестваYБесплатно(СписокАкций, СписокНоменклатуры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТМАкции.Ссылка КАК Акция,
	|	ТМАкции.Ссылка.НаименованиеАкции КАК НаименованиеАкции,
	|	ТМАкции.Количество КАК Количество,
	|	ТМАкции.Номенклатура КАК Номенклатура,
	|	ТМАкции.Номенклатура.Код КАК Код,
	|	ТМАкции.Номенклатура.Артикул КАК Артикул,
	|	ТМАкции.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
	|	ТМАкции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	//|	ТМАкции.Номенклатура.ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|	ТМАкции.КоличествоПодарок
	|ИЗ
	|	Документ.ТрейдМаркетинговаяАкция.ПриЗаказеXКоличестваYБесплатно КАК ТМАкции
	|ГДЕ
	|	ТМАкции.Ссылка В(&СписокАкций)
	|	И (ТМАкции.Номенклатура В (&СписокНоменклатуры)
	|			ИЛИ &ВсяНоменклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Количество
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("СписокАкций",		СписокАкций);
	Запрос.УстановитьПараметр("СписокНоменклатуры",	СписокНоменклатуры);
	Запрос.УстановитьПараметр("ВсяНоменклатура", (СписокНоменклатуры = Неопределено));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Процедура ОчиститьТабличнуюЧасть(ТабличнаяЧасть, ДокументОбъект, НомерСтроки = 0)
	
	Для Каждого стрТЧ Из ТабличнаяЧасть Цикл
		
		Если Не НомерСтроки = 0 И Не стрТЧ.НомерСтроки = НомерСтроки Тогда
			Продолжить;
		КонецЕсли;
				
		//стрТЧ.Проект = Справочники.Проекты.ПустаяСсылка();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПоАкции(ТабличнаяЧасть, ДокументОбъект, ТекстСообщения = "", НомерСтроки = 0) Экспорт
	
	СтруктураШапкиДокумента = ДокументОбъект;
	
	//ТабличнаяЧасть = Документы.ЗаказПокупателя.СоздатьДокумент().Товары;
	
	ОчиститьТабличнуюЧасть(ТабличнаяЧасть, ДокументОбъект, НомерСтроки);
	
	ТипыТрейдМаркетинговыхАкций = ПолучитьТаблицуПриоритетовАкций();
	ТипыТрейдМаркетинговыхАкций.Сортировать("Приоритет Убыв");
		
	Для Каждого стрТипТМАкции Из ТипыТрейдМаркетинговыхАкций Цикл
		
		ТипТМАкции = стрТипТМАкции.ТипТМАкции;
		
		СписокАкций = Новый СписокЗначений;
		
		// Проверим клиента на участника акции.
		ВыборкаАкции = УчастиеКонтрагентаВАкциях(СтруктураШапкиДокумента.Контрагент, СтруктураШапкиДокумента.ДатаОтгрузки, ТипТМАкции);
		Для Каждого стрАкция Из ВыборкаАкции Цикл
			СписокАкций.Добавить(стрАкция.Акция);
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(СписокАкций) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ИнформационноеОкноВКоллЦентре Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ПалетнаяОтгрузка Тогда
			
			УсловияУчастияВАкции = УсловияАкцииПалетнаяОтгрузка(СписокАкций, ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"));
			
			Для Каждого УсловиеАкции Из УсловияУчастияВАкции Цикл
				
				стрТЧ = ТабличнаяЧасть.Найти(УсловиеАкции.Номенклатура, "Номенклатура");
				
				Если Не НомерСтроки = 0 И Не стрТЧ.НомерСтроки = НомерСтроки Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстСообщения = ТекстСообщения + Символы.ПС + "Внимание! Клиент является участником акции " + УсловиеАкции.Акция.НаименованиеАкции + Символы.ПС;
				
				Если стрТЧ.Количество >= УсловиеАкции.Количество Тогда
					
					стрТЧ.Проект = УсловиеАкции.Акция.Проект;
				 	
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
				
		Если ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.CкидкаЗаОбъем Тогда
			
			УсловияУчастияВАкции = УсловияАкцииCкидкаЗаОбъем(СписокАкций, ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"));
			
			Для Каждого УсловиеАкции Из УсловияУчастияВАкции Цикл
				
				стрТЧ = ТабличнаяЧасть.Найти(УсловиеАкции.Номенклатура, "Номенклатура");
				
				Если Не НомерСтроки = 0 И Не стрТЧ.НомерСтроки = НомерСтроки Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстСообщения = ТекстСообщения + "Внимание! Клиент является участником акции " + УсловиеАкции.Акция.НаименованиеАкции + Символы.ПС;
				
				Если стрТЧ.Количество >= УсловиеАкции.Количество Тогда
					
					КоличествоПоАкции = Цел(стрТЧ.Количество / УсловиеАкции.Количество) * УсловиеАкции.Количество;
					
					стрТЧ.Сумма = стрТЧ.Цена * (стрТЧ.Количество - КоличествоПоАкции) + УсловиеАкции.Цена * КоличествоПоАкции;
					
					// спорная ситуация, проверить
					стрТЧ.Цена = УсловиеАкции.Цена;
					
					стрТЧ.Проект = УсловиеАкции.Акция.Проект;
				 	
					стрТЧ.ПроцентСкидкиНаценки = 0;
					//стрТЧ.УсловиеАвтоматическойСкидки = Перечисления.УсловияСкидкиНаценки.ПустаяСсылка();
					
					//ТекстСообщения = ТекстСообщения + "При заказе номенклатурной позиции: " + СокрЛП(стрТЧ.Номенклатура) + " " + стрТЧ.Номенклатура + " более " + условиеАкции.Количество + " ед. цена составила: " + условиеАкции.Цена + " руб. цена без акции: " + стрТЧ.Цена  + " руб." + Символы.ПС;
					
					//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, ДокументОбъект);
					
				КонецЕсли;
				
			КонецЦикла;		
			
		КонецЕсли;
		
		Если ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ИзменениеЦеныПриБольшомОбъеме Тогда
			
			УсловияУчастияВАкции = УсловияАкцииCкидкаЗаОбъем(СписокАкций, ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"));
			
			Для Каждого УсловиеАкции Из УсловияУчастияВАкции Цикл
				
				стрТЧ = ТабличнаяЧасть.Найти(УсловиеАкции.Номенклатура, "Номенклатура");
				
				Если Не НомерСтроки = 0 И Не стрТЧ.НомерСтроки = НомерСтроки Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстСообщения = ТекстСообщения  + Символы.ПС + "Внимание! Клиент является участником акции " + УсловиеАкции.Акция.НаименованиеАкции + Символы.ПС;
				
				Если стрТЧ.Количество >= УсловиеАкции.Количество Тогда
					
					стрТЧ.Цена = Мин(стрТЧ.Цена, УсловиеАкции.Цена);
					стрТЧ.Проект = УсловиеАкции.Акция.Проект;
				 	
					стрТЧ.ПроцентСкидкиНаценки = 0;
					//стрТЧ.УсловиеАвтоматическойСкидки = Перечисления.УсловияСкидкиНаценки.ПустаяСсылка();
					
					РассчитатьСуммуТабЧасти(стрТЧ, ДокументОбъект);
					//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, ДокументОбъект);
					
					ТекстСообщения = ТекстСообщения + "При заказе номенклатурной позиции: " + СокрЛП(стрТЧ.Номенклатура) + " " + стрТЧ.Номенклатура + " более " + УсловиеАкции.Количество + " ед. цена составила: " + УсловиеАкции.Цена + " руб. цена без акции: " + стрТЧ.Цена  + " руб." + Символы.ПС;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ПриЗаказеXКоличестваYБесплатно Тогда
			
			УсловияУчастияВАкции = УсловияАкцииПриЗаказеXКоличестваYБесплатно(СписокАкций, ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"));
			
			МаксКратность= 9999;
			
			Для Каждого УсловиеАкции Из УсловияУчастияВАкции Цикл
				
				стрТЧ = ТабличнаяЧасть.Найти(УсловиеАкции.Номенклатура, "Номенклатура");
				
				Если Не НомерСтроки = 0 И Не стрТЧ.НомерСтроки = НомерСтроки Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстСообщения = ТекстСообщения  + Символы.ПС + "Внимание! Клиент является участником акции " + УсловиеАкции.Акция.НаименованиеАкции + Символы.ПС;
				
				Если стрТЧ.Количество >= УсловиеАкции.Количество Тогда
					
					Кратность = Цел(стрТЧ.Количество / условиеАкции.Количество);
					
					Кратность = Мин(Кратность,МаксКратность);					
					
					КоличествоПоАкции = Кратность * УсловиеАкции.КоличествоПодарок;
					ЦенаПоАкции = 0;
					
					стрТЧ.Сумма = стрТЧ.Цена * (стрТЧ.Количество - КоличествоПоАкции) + ЦенаПоАкции * КоличествоПоАкции;
					стрТЧ.Проект = УсловиеАкции.Акция.Проект;
							
					//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(стрТЧ, ДокументОбъект);
							
					ТекстСообщения = ТекстСообщения + "" + Символы.ПС;
					
				КонецЕсли;
				
			КонецЦикла;		
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПоАкцииВозврат(ТабличнаяЧасть, ДокументОбъект) Экспорт
	
	СтруктураШапкиДокумента = ДокументОбъект;
	
	//ТабличнаяЧасть = Документы.ЗаказПокупателя.СоздатьДокумент().Товары;
	
	ТипыТрейдМаркетинговыхАкций = ПолучитьТаблицуПриоритетовАкций();
	ТипыТрейдМаркетинговыхАкций.Сортировать("Приоритет Убыв");
		
	Для Каждого стрТипТМАкции Из ТипыТрейдМаркетинговыхАкций Цикл
		
		ТипТМАкции = стрТипТМАкции.ТипТМАкции;
		Если Ложь
			Или ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.CкидкаЗаОбъем 
			Или ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ИзменениеЦеныПриБольшомОбъеме 
			Тогда
			
			СписокАкций = Новый СписокЗначений;
			
			// Проверим клиента на участника акции.
			ВыборкаАкции = УчастиеКонтрагентаВАкциях(СтруктураШапкиДокумента.Контрагент, СтруктураШапкиДокумента.ДатаОтгрузки, ТипТМАкции);
			Для Каждого стрАкция Из ВыборкаАкции Цикл
				СписокАкций.Добавить(стрАкция.Акция);
			КонецЦикла;
			
			Если Не ЗначениеЗаполнено(СписокАкций) Тогда
				Продолжить;
			КонецЕсли;
			
			УсловияУчастияВАкции = УсловияАкцииCкидкаЗаОбъем(СписокАкций, ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"));
			
			Для Каждого УсловиеАкции Из УсловияУчастияВАкции Цикл
				
				стрТЧ = ТабличнаяЧасть.Найти(УсловиеАкции.Номенклатура, "Номенклатура");
				
				Если стрТЧ <> Неопределено Тогда
					
					стрТЧ.Цена = УсловиеАкции.Цена;
					СтрТЧ.Сумма = стрТЧ.Цена * стрТЧ.Количество;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуПриоритетовАкций() Экспорт
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Приоритет",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(1,0)));
	ТаблицаЗначений.Колонки.Добавить("ТипТМАкции",Новый ОписаниеТипов("ПеречислениеСсылка.ТипыТрейдМаркетинговыхАкций"));
	
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Приоритет = 1;
	НоваяСтрока.ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ИзменениеЦеныПриБольшомОбъеме;
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Приоритет = 2;
	НоваяСтрока.ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.CкидкаЗаОбъем;
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Приоритет = 3;
	НоваяСтрока.ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ПриЗаказеXКоличестваYБесплатно;
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Приоритет = 4;
	НоваяСтрока.ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ПалетнаяОтгрузка;
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Приоритет = 5;
	НоваяСтрока.ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ИнформационноеОкноВКоллЦентре;
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Приоритет = 6;
	НоваяСтрока.ТипТМАкции = Перечисления.ТипыТрейдМаркетинговыхАкций.ПечатьИнформационныхЛистовок;
	
	Возврат ТаблицаЗначений;
	
КонецФункции

// byse {

Процедура РассчитатьСуммуТабЧасти(стрТЧ, ДокументОбъект)
	СтрТЧ.Сумма = Окр(стрТЧ.Цена * (1 - стрТЧ.ПроцентСкидкиНаценки / 100) * стрТЧ.Количество,2);
КонецПроцедуры

Функция СписокАкцийКонтрагента (Контрагент, ДатаОтгрузки) Экспорт
	ТипыТрейдМаркетинговыхАкций = ПолучитьТаблицуПриоритетовАкций();
	ТипыТрейдМаркетинговыхАкций.Сортировать("Приоритет Убыв");
	СписокАкций = Новый СписокЗначений;   		
	ВыборкаАкции = УчастиеКонтрагентаВАкциях(Контрагент, ДатаОтгрузки);
	Для Каждого стрАкция Из ВыборкаАкции Цикл
		СписокАкций.Добавить(стрАкция.Акция);
	КонецЦикла;                           		
	Возврат СписокАкций;
КонецФункции	

// byse }
