Функция ЗапуститьВыполнениеВФоне (ИмяПроцедуры, Параметры = Неопределено, ИДЗадания = Неопределено, НаименованиеЗадания = Неопределено, СписокЗаданийДляПроверки = Неопределено) Экспорт
	Если ИДЗадания = Неопределено Тогда
		ИДЗадания = Новый УникальныйИдентификатор;
	КонецЕсли;	
	
	Если НаименованиеЗадания = Неопределено Тогда
		НаименованиеЗадания = ИмяПроцедуры;
	КонецЕсли;	
	
	Если ЕстьАктивныеЗадания(ИмяПроцедуры,НаименованиеЗадания) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Если ТипЗнч(СписокЗаданийДляПроверки) = Тип ("Массив") Тогда
		Для Каждого мИмя Из СписокЗаданийДляПроверки Цикл
			Если ЕстьАктивныеЗадания(мИмя) Тогда
				Возврат Неопределено;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
	Рез = ФоновыеЗадания.Выполнить(ИмяПроцедуры,Параметры,ИДЗадания,НаименованиеЗадания);
	
	Если Рез <> Неопределено Тогда
		Возврат Рез.УникальныйИдентификатор;
	КонецЕсли;	
КонецФункции	

Функция ПроверитьВыполнениеЗадания (ИДЗадания) Экспорт
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИДЗадания);
	Стр     = Новый Структура("Завершено,ЗавершеноУспешно",Ложь,Ложь);
	Если Задание = Неопределено Тогда
		Стр.Вставить("Завершено"       ,Истина);
		Стр.Вставить("ЗавершеноУспешно",Ложь);
		Стр.Вставить("Начало",Неопределено);
		Стр.Вставить("Конец" ,Неопределено);
	Иначе
		Стр.Вставить("Начало",Задание.Начало);
		Стр.Вставить("Конец" ,Задание.Конец);
		Если Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
			Стр.Вставить("Завершено"       ,Истина);
			Стр.Вставить("ЗавершеноУспешно",Истина);
		ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
			Стр.Вставить("Завершено"       ,Истина);
			Стр.Вставить("ЗавершеноУспешно",Ложь);
		ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
			Стр.Вставить("Завершено"       ,Ложь);
			Стр.Вставить("ЗавершеноУспешно",Ложь);
		ИначеЕсли Задание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
			Стр.Вставить("Завершено"       ,Истина);
			Стр.Вставить("ЗавершеноУспешно",Ложь);
		КонецЕсли; 
	КонецЕсли;
	Возврат Стр;
КонецФункции	

Функция ЕстьАктивныеЗадания (ИмяПроцедуры, НаименованиеЗадания = Неопределено) Экспорт
	Если НаименованиеЗадания = Неопределено Тогда
		НаименованиеЗадания = ИмяПроцедуры;
	КонецЕсли;	
	
	ТекЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Наименование,Состояние",НаименованиеЗадания,СостояниеФоновогоЗадания.Активно));
	Если ТекЗадания.Количество() > 0 Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Возврат Ложь;
КонецФункции	

Функция ОтменитьВыполнениеЗадания (ИДЗадания) Экспорт
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИДЗадания);
	Если Задание = Неопределено Тогда
		Возврат Истина;
	Иначе
		Если Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
			Задание.Отменить();
			Возврат Истина;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;	
КонецФункции	

Процедура ОстановитьВсеФоновыеЗадания () Экспорт
	
	ТекЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Состояние",СостояниеФоновогоЗадания.Активно));
	
	Для Каждого Задание Из ТекЗадания Цикл
		Задание.Отменить();
	КонецЦикла;	
	
КонецПроцедуры	

// ЧАСТНЫЕ СЛУЧАИ ПРОЦЕДУР И ФУНКЦИЙ //

Процедура СделатьОбмен (АдресРезультата, ПроверитьСоединение = ЛОЖЬ) Экспорт
	
	РаботаСЖурналом.ОС_ЗаписьЖурналаРегистрации("Обмен с ЦБ",0, "Начат обмен в фоновом режиме");
	
	Попытка
		Если ПроверитьСоединение Тогда
			Рез = СинхронизацияСервер.ПроверитьСоединениеНаСервере();
			Если НЕ Истина = Рез.Успех Тогда
				ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
				Возврат;
			КонецЕсли;	
		КонецЕсли;	
	Исключение
		Ошибка = ИнформацияОбОшибке();
		Стр    = Новый Структура("Успех,Ошибка",Ложь,Ошибка.Описание); 
		РаботаСЖурналом.ОС_ЗаписьЖурналаРегистрации("Обмен с ЦБ",0, ПодробноеПредставлениеОшибки(Ошибка));
		ПоместитьВоВременноеХранилище(Стр,АдресРезультата);
		Возврат;
	КонецПопытки;		
		
	Попытка
		Рез = СинхронизацияСервер.СделатьОбмен(Истина);    // Загрузили файлы 1 раз - и достаточно
		ПоместитьВоВременноеХранилище(Рез,АдресРезультата);	
	Исключение
		Ошибка = ИнформацияОбОшибке();
		РаботаСЖурналом.ОС_ЗаписьЖурналаРегистрации("Ошибка обмена:",0, ПодробноеПредставлениеОшибки(Ошибка));
		Стр    = Новый Структура("Успех,Ошибка",Ложь,Ошибка.Описание); 
		ПоместитьВоВременноеХранилище(Стр,АдресРезультата);
	КонецПопытки;
	
	РаботаСЖурналом.ОС_ЗаписьЖурналаРегистрации("Обмен с ЦБ",0, "Завершен обмен в фоновом режиме");
	
КонецПроцедуры	

Процедура СделатьРегистрацию (АдресРезультата, АдресСервера, СтруктураПараметров) Экспорт
	Попытка
		РаботаСЖурналом.ОС_ЗаписьЖурналаРегистрации("Начало регистрации");
		Рез = СинхронизацияСервер.АвторизацияНаСервере(АдресСервера,СтруктураПараметров);
		Если Истина = Рез.Успех Тогда
			ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
		Иначе
			ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
			Возврат;
		КонецЕсли;	
	Исключение
		Ошибка = ИнформацияОбОшибке();
		Стр    = Новый Структура("Успех,Ошибка",Ложь,Ошибка.Описание); 
		ПоместитьВоВременноеХранилище(Стр,АдресРезультата);
	КонецПопытки;	
КонецПроцедуры

Процедура СделатьАктивацию (АдресРезультата,ПрисланныйКод) Экспорт
	Попытка
		Рез = СинхронизацияСервер.АктивироватьНаСервере(ПрисланныйКод);
		Если Истина = Рез.Успех Тогда
			ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
		Иначе	
			ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
		КонецЕсли;	
	Исключение
		Ошибка = ИнформацияОбОшибке();
		Стр    = Новый Структура("Успех,Ошибка",Ложь,Ошибка.Описание); 
		ПоместитьВоВременноеХранилище(Стр,АдресРезультата);
	КонецПопытки;	
КонецПроцедуры	

Процедура СинхронизироватьКоординаты (АдресРезультата) Экспорт
	Попытка
		СЧ  = 1;
		Рез = ОбщийМодульСервер.ПрочитатьКоординатыАгентаСервер();
		Пока Истина = Рез.Успех И Истина = Рез.Продолжать Цикл
			СЧ = СЧ + 1;
			Если СЧ = 10 Тогда
				ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
				Возврат;
			КонецЕсли;	
			Рез = ОбщийМодульСервер.ПрочитатьКоординатыАгентаСервер();
		КонецЦикла;	
		ПоместитьВоВременноеХранилище(Рез,АдресРезультата);
	Исключение
		Ошибка = ИнформацияОбОшибке();
		РаботаСЖурналом.ОС_ЗаписьЖурналаРегистрации("Ошибка при загрузке координат: " + Ошибка.Описание);
		Стр    = Новый Структура("Успех,Ошибка",Ложь,Ошибка.Описание); 
		ПоместитьВоВременноеХранилище(Стр,АдресРезультата);
	КонецПопытки;	
КонецПроцедуры	