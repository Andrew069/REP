
Процедура ОбработчикНачалаСинхронизации(Форма, ИмяПроцедуры, Знач ДопПараметрыЗадания = Неопределено, СписокЗаданийДляПроверки = Неопределено)  Экспорт
	Если ФоновыеЗаданияСервер.ЕстьАктивныеЗадания(ИмяПроцедуры) Тогда
		Возврат;
	КонецЕсли;	
	
	Если СписокЗаданийДляПроверки <> Неопределено Тогда
		Для Каждого Задание Из СписокЗаданийДляПроверки Цикл
			Если ФоновыеЗаданияСервер.ЕстьАктивныеЗадания(Задание) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	ПараметрыЗадания        = Новый Массив;
	АдресРезультатовЗадания = ПоместитьВоВременноеХранилище(Неопределено,Форма.УникальныйИдентификатор);
	ПараметрыЗадания.Добавить(АдресРезультатовЗадания);
	
	Если ТипЗнч(ДопПараметрыЗадания) = Тип ("Строка") Тогда
		Попытка
			ДопПараметрыЗадания = ПолучитьИзВременногоХранилища(ДопПараметрыЗадания);
		Исключение
			ДопПараметрыЗадания = Неопределено;
		КонецПопытки;	
	КонецЕсли;	
	
	Если ТипЗнч(ДопПараметрыЗадания) = Тип ("Массив") Тогда
		Для Каждого ПараметрЗадания Из ДопПараметрыЗадания Цикл
			ПараметрыЗадания.Добавить(ПараметрЗадания);
		КонецЦикла;			
	КонецЕсли;
	
	Форма.АдресРезультатовЗадания = АдресРезультатовЗадания;
	
	Рез = ФоновыеЗаданияСервер.ЗапуститьВыполнениеВФоне(ИмяПроцедуры,ПараметрыЗадания,,,СписокЗаданийДляПроверки);
	
	Если Рез <> Неопределено Тогда
		Форма.ИДСинхронизации           = Рез;
		Форма.ИмяПроцедурыСинхронизации = ИмяПроцедуры;
	КонецЕсли;
	
	ОбработчикОбновленияСостоянияСинхронизации(Форма);
	
	Если ЗначениеЗаполнено(Форма.ИДСинхронизации) Тогда
		Форма.ПодключитьОбработчикОжидания("ОбработчикОбновленияСостоянияСинхронизации",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры	

Процедура ОбработчикОбновленияСостоянияСинхронизации (Форма) Экспорт
	Элементы = Форма.Элементы;
	
	ЗаданиеВыполняется = Истина;
	
	ТекстЗадания = "";
	ТекКартинка  = Неопределено; 
	ТекстОшибки  = "";
	
	СтруктураДляСтрокСостояния = Новый Структура("СтрокиСостояния");
	ЗаполнитьЗначенияСвойств(СтруктураДляСтрокСостояния,Форма);
	СтрокиСостояний           = Новый Структура("ОписаниеПроцесса,ОписаниеЗавершения,ОписаниеЗавершенияСОшибкой,Суффикс,НеОбновлятьФорму","Начат обмен: ","Синхронизировано: ","Ошибка синхронизации: ","", ЛОЖЬ);
	Если ТипЗнч(СтруктураДляСтрокСостояния.СтрокиСостояния) = Тип ("Структура") Тогда
		Для Каждого Эл Из СтруктураДляСтрокСостояния.СтрокиСостояния Цикл
			СтрокиСостояний.Вставить(Эл.Ключ,Эл.Значение);
		КонецЦикла;	
	КонецЕсли;	
	
	Успех = ЛОЖЬ;
	
	Если ЗначениеЗаполнено(Форма.ИДСинхронизации) Тогда
		Рез = ФоновыеЗаданияСервер.ПроверитьВыполнениеЗадания(Форма.ИДСинхронизации);
		Если Рез.Завершено Тогда
			ЗаданиеВыполняется = Ложь;
			
			// Установим соответствующую иконку и текст //
			РезультатЗадания = ПолучитьИзВременногоХранилища(Форма.АдресРезультатовЗадания);
			Если ТипЗнч(РезультатЗадания) = Тип ("Структура") Тогда
				Если РезультатЗадания.Успех Тогда
					ТекКартинка  = БиблиотекаКартинок.КартинкаУспех;
					ТекстЗадания = СтрокиСостояний.ОписаниеЗавершения + Формат(Рез.Конец,"ДФ='dd.MM HH:mm:ss'");
				Иначе
					ТекКартинка  = БиблиотекаКартинок.КартинкаНеудача;
					РезультатЗадания.Свойство("Ошибка",ТекстОшибки);
					ТекстЗадания = СтрокиСостояний.ОписаниеЗавершенияСОшибкой + Формат(Рез.Конец,"ДФ='dd.MM HH:mm:ss'");
				КонецЕсли;
			Иначе
				ТекстЗадания = СтрокиСостояний.ОписаниеЗавершенияСОшибкой + Формат(Рез.Конец,"ДФ='dd.MM HH:mm:ss'");
				ТекКартинка  = БиблиотекаКартинок.КартинкаНеудача;
			КонецЕсли;
			
			// Загрузка прошла успешно, форму можно закрыть //
			Если Рез.ЗавершеноУспешно Тогда
				Успех = Истина;
			КонецЕсли;
		Иначе
			ТекКартинка  = БиблиотекаКартинок.КартинкаЗагрузка;
			ТекстЗадания = СтрокиСостояний.ОписаниеПроцесса + Формат(Рез.Начало,"ДФ='dd.MM HH:mm:ss'");
		КонецЕсли;	
	Иначе	
		ТекКартинка        = БиблиотекаКартинок.КартинкаПустая;
		ЗаданиеВыполняется = Ложь;
	КонецЕсли;
	
	Если Не СтрокиСостояний.НеОбновлятьФорму Тогда
		Если ТекстЗадания <> Элементы["ДекорацияСостояниеОбмена" + СтрокиСостояний.Суффикс].Заголовок Тогда
			Элементы["ДекорацияСостояниеОбмена" + СтрокиСостояний.Суффикс].Заголовок   = ТекстЗадания;
			Элементы["ДекорацияСостояниеОбмена" + СтрокиСостояний.Суффикс].Гиперссылка = Не ПустаяСтрока(ТекстОшибки);
			Если Найти(ТекстОшибки,"Обновите конфигурацию") > 0 Тогда
				ТекстОшибки = "Требуется обновить конфигурацию";
			КонецЕсли;	
			Форма["ТекстОшибки" + СтрокиСостояний.Суффикс] = ТекстОшибки;
		КонецЕсли;	
		Если ТекКартинка <> Элементы["КартинкаОбмен" + СтрокиСостояний.Суффикс].Картинка Тогда
			Элементы["КартинкаОбмен" + СтрокиСостояний.Суффикс].Картинка = ТекКартинка;
		КонецЕсли;	
	КонецЕсли;
	
	Если Не ЗаданиеВыполняется Тогда
//		Форма.ОтключитьОбработчикОжидания("ОбработчикОбновленияСостоянияСинхронизации");
		Форма.ОбновлениеПослеСинхронизации();	
	Иначе	
		Форма.ПодключитьОбработчикОжидания("ОбработчикОбновленияСостоянияСинхронизации",1,Истина);
	КонецЕсли;
КонецПроцедуры	

