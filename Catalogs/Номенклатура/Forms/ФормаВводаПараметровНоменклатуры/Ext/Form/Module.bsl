// КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаКлиенте
Процедура Сохранить(Команда)
	Если Не ПроверитьКоличество() Тогда
		Возврат;
	КонецЕсли;
	
	Рез = Новый Структура;
	
	Для Каждого Эл Из СтруктураПараметров() Цикл
		Рез.Вставить(Эл.Ключ,ЭтаФорма[Эл.Ключ]);	
	КонецЦикла;
	Если ПроцентСкидкиНаценки > 20 Тогда
		Рез.Вставить("ПроцентСкидкиНаценки",20);
	ИначеЕсли ПроцентСкидкиНаценки < -20 Тогда
		Рез.Вставить("ПроцентСкидкиНаценки", -20);
	КонецЕсли;
	
	Закрыть(Рез);
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентСкидкиНаценкиПриИзменении(Элемент)
	УстановитьВидимостьПроцентаСкидки();
КонецПроцедуры

// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтоСнятиеОстатков = Ложь;
	Для Каждого Эл Из СтруктураПараметров() Цикл
		Попытка
			ЭтаФорма[Эл.Значение] = Параметры[Эл.Ключ];
		Исключение
		КонецПопытки;
	КонецЦикла;	
	
	ЗаполнимКратность();
	
	ПервыйВводКоличества = Истина;
	КоличествоСтрокой = Формат(КоличествоЗаказано,"ЧН=0; ЧГ=0");
	Заголовок         = "Заказ на " + ОбщийМодульСервер.ФорматДаты(ДатаДоставки,Истина);
	Запрос            = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧ.Дата КАК Дата,
	|	ТЧ.Операция КАК Операция,
	|	ТЧ.Количество,
	|	ТЧ.Сумма,
	|	ТЧ.Цена
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеПродаж.Дата КАК Дата,
	|		""Продажа"" КАК Операция,
	|		ДанныеПродаж.ПродажиКоличество КАК Количество,
	|		ДанныеПродаж.ПродажиСумма КАК Сумма,
	|		ВЫБОР
	|			КОГДА ДанныеПродаж.ПродажиКоличество = 0
	|				ТОГДА 0
	|			ИНАЧЕ ДанныеПродаж.ПродажиСумма / ДанныеПродаж.ПродажиКоличество
	|		КОНЕЦ КАК Цена
	|	ИЗ
	|		РегистрСведений.ОС_ДанныеПродажДляМП КАК ДанныеПродаж
	|	ГДЕ
	|		ДанныеПродаж.Контрагент = &Контрагент
	|		И ДанныеПродаж.Номенклатура = &Номенклатура
	|		И ДанныеПродаж.ПродажиКоличество <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеПродаж.Дата,
	|		""Возврат"",
	|		ДанныеПродаж.ВозвратыКоличество,
	|		ДанныеПродаж.ВозвратыСумма,
	|		ВЫБОР
	|			КОГДА ДанныеПродаж.ВозвратыКоличество = 0
	|				ТОГДА 0
	|			ИНАЧЕ ДанныеПродаж.ВозвратыСумма / ДанныеПродаж.ВозвратыКоличество
	|		КОНЕЦ
	|	ИЗ
	|		РегистрСведений.ОС_ДанныеПродажДляМП КАК ДанныеПродаж
	|	ГДЕ
	|		ДанныеПродаж.Контрагент = &Контрагент
	|		И ДанныеПродаж.Номенклатура = &Номенклатура
	|		И ДанныеПродаж.ВозвратыКоличество <> 0) КАК ТЧ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ,
	|	Операция УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОстаткиТоваров.Количество) КАК КоличествоОстаток
	|ИЗ
	|	РегистрСведений.ОС_ОстаткиТоваров КАК ОстаткиТоваров
	|ГДЕ
	|	ОстаткиТоваров.Номенклатура = &Номенклатура
	|	И ОстаткиТоваров.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ограничение.Грузополучатель,
	|	Ограничение.Номенклатура,
	|	Ограничение.Количество
	|ИЗ
	|	РегистрСведений.ОграчениеОтгрузокВозвратообразущейПродукции КАК Ограничение
	|ГДЕ
	|	Ограничение.Грузополучатель = &Контрагент
	|	И Ограничение.Номенклатура = &Номенклатура
	|	И Ограничение.Количество > 0";
	Запрос.УстановитьПараметр("ТекущаяДата" ,ТекущаяДата());
	Запрос.УстановитьПараметр("Контрагент"  ,Контрагент);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",ХарактеристикаНоменклатуры);
	РЗ = Запрос.ВыполнитьПакет();
	
	ТаблицаПродажиВозвраты.Загрузить(РЗ[0].Выгрузить());
	
	//Элементы.ТаблицаПродажиВозвраты.ВысотаВСтрокахТаблицы = ?(ТаблицаПродажиВозвраты.Количество() > 0 ,ТаблицаПродажиВозвраты.Количество(), 1);
	
	КолПродажа = ТаблицаПродажиВозвраты.Выгрузить(Новый Структура("Операция","Продажа")).Итог("Количество");
	КолВозврат = ТаблицаПродажиВозвраты.Выгрузить(Новый Структура("Операция","Возврат")).Итог("Количество");
	
	Если КолПродажа <> 0 Тогда
		ПроцентВозврата = КолВозврат / КолПродажа * 100;
	КонецЕсли;	
	
	Выборка = РЗ[1].Выбрать();
	Если Выборка.Следующий() Тогда 
		Остаток = Выборка.КоличествоОстаток;
	КонецЕсли;
	
	Выборка = РЗ[2].Выбрать();
	Если Выборка.Следующий() Тогда 
		ОграничениеЗаказа = Выборка.Количество;
	КонецЕсли;	
	
	УстановитьВидимостьПроцентаСкидки();
	
	ФорматированнаяСтрока = Новый ФорматированнаяСтрока("Заказано товара больше, чем 
	|максимально допустимое количество (" + ОграничениеЗаказа + ")",,ЦветаСтиля.ЦветОсобогоТекста);
	Элементы.ДекорацияНеверноеКоличество.Заголовок = ФорматированнаяСтрока;
	Элементы.ДекорацияНеверноеКоличество.Видимость = Не (ЭтоВозврат Или ЭтоСнятиеОстатков);
	
	ФорматированнаяСтрока = Новый ФорматированнаяСтрока("Допустимо заказывать только 
	|количество товара, кратное " + Кратность,,ЦветаСтиля.ЦветОсобогоТекста);
	Элементы.ДекорацияНевернаяКратность.Заголовок = ФорматированнаяСтрока;
	Элементы.ДекорацияНевернаяКратность.Видимость = Не (ЭтоВозврат Или ЭтоСнятиеОстатков);
	
	//Элементы.ЦенаБезСкидки.Видимость = Цена <> ЦенаБезСкидки;
	
	Если ЗначениеЗаполнено(Номенклатура.ОсновноеИзображение) Тогда
		Элементы.КнопкаОткрытьКартинку.Видимость = ТипЗнч(Номенклатура.ОсновноеИзображение.Хранилище.Получить()) = Тип("Картинка");
	Иначе
		Элементы.КнопкаОткрытьКартинку.Видимость = Ложь;
	КонецЕсли;
	
	ПроверитьКоличество();
КонецПроцедуры

&НаСервереБезКонтекста 
Функция СтруктураПараметров()
	Стр = Новый Структура;
	Стр.Вставить("ДатаДоставки"              ,"ДатаДоставки");
	Стр.Вставить("КоличествоЗаказано"        ,"КоличествоЗаказано");
	Стр.Вставить("Контрагент"                ,"Контрагент");
	Стр.Вставить("Номенклатура"              ,"Номенклатура");
	Стр.Вставить("Остаток"                   ,"Остаток");
	Стр.Вставить("Цена"                      ,"Цена");
	Стр.Вставить("ХарактеристикаНоменклатуры","ХарактеристикаНоменклатуры");
	Стр.Вставить("ПроцентСкидкиНаценки"      ,"ПроцентСкидкиНаценки");
	Стр.Вставить("ОграничениеЗаказа"         ,"ОграничениеЗаказа");
	Стр.Вставить("ЭтоВозврат"                ,"ЭтоВозврат");
	Стр.Вставить("ЦенаБезСкидки"             ,"ЦенаБезСкидки");
	Стр.Вставить("ЭтоСнятиеОстатков"		 ,"ЭтоСнятиеОстатков");
	Возврат Стр;	
КонецФункции	

&НаСервере
Процедура УстановитьВидимостьПроцентаСкидки()
	Элементы.ДекорацияНевернаяСкидка.Видимость = ПроцентСкидкиНаценки > 20 Или ПроцентСкидкиНаценки < -20;
КонецПроцедуры	

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	ПриИзмененииКоличества();
	ПроверитьКоличество();
КонецПроцедуры

&НаСервере
Функция ПроверитьКоличество()
	НеверноеКоличество = Ложь;
	
	Если ЭтоВозврат Или ЭтоСнятиеОстатков Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Если Кратность <> 0 И КоличествоЗаказано % Кратность <> 0 Тогда
		НеверноеКоличество = Истина;
		Элементы.ДекорацияНевернаяКратность.Видимость = Истина;
	Иначе
		Элементы.ДекорацияНевернаяКратность.Видимость = Ложь;
	КонецЕсли;	
		
	Если ОграничениеЗаказа <> 0 И КоличествоЗаказано > ОграничениеЗаказа Тогда
		НеверноеКоличество = Истина;
		Элементы.ДекорацияНеверноеКоличество.Видимость = Истина;
	Иначе
		Элементы.ДекорацияНеверноеКоличество.Видимость = Ложь;
	КонецЕсли;	
	
	Возврат Не НеверноеКоличество;
КонецФункции	

&НаКлиенте
Процедура ТаблицаПродажиВозвратыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКоличества()
	КоличествоЗаказано = Число(КоличествоСтрокой);
	Сумма              = КоличествоЗаказано * Цена;
КонецПроцедуры	

// Экранная клавиатура //

&НаКлиенте
Процедура Кнопка(Команда)
	ИмяКнопки = СтрЗаменить(Команда.Имя,"Кнопка","");
	Если ИмяКнопки = "Точка" Тогда
		Если ПервыйВводКоличества Тогда КоличествоСтрокой = "0"; ПервыйВводКоличества = Ложь; КонецЕсли;
		КоличествоСтрокой = КоличествоСтрокой + ?(Найти(КоличествоСтрокой,".") = 0,".","");
		//ТочкаУстановлена = Истина;
	ИначеЕсли ИмяКнопки = "Стереть" Тогда
		КоличествоСтрокой = "0";
		//КоличествоЗаказано = 0;
	ИначеЕсли ИмяКнопки = "Назад" Тогда
		ПервыйВводКоличества = Ложь;
		КоличествоСтрокой = Лев(КоличествоСтрокой,СтрДлина(КоличествоСтрокой) - 1);
		Если КоличествоСтрокой = "" Тогда 
			КоличествоСтрокой = "0";
		КонецЕсли;	
		//КоличествоЗаказано = Цел(КоличествоЗаказано / 10);
	Иначе
		Если ПервыйВводКоличества Тогда КоличествоСтрокой = "0"; ПервыйВводКоличества = Ложь; КонецЕсли;
		КоличествоСтрокой =?(КоличествоСтрокой = "0","",КоличествоСтрокой) + ?(Найти(КоличествоСтрокой,".") > 0 И (СтрДлина(КоличествоСтрокой) - Найти(КоличествоСтрокой,".") > 2),"",ИмяКнопки); 
		//КоличествоЗаказано = КоличествоЗаказано * 10 + Число (ИмяКнопки);
	КонецЕсли;	
	ПриИзмененииКоличества();
КонецПроцедуры

//Глебов
&НаСервере
Процедура ЗаполнимКратность()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	вл.Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОсобыеКвантыКратностиПоКонтрагентам_Балмико.Количество КАК Количество,
		|		1 КАК Порядок
		|	ИЗ
		|		РегистрСведений.ОсобыеКвантыКратностиПоКонтрагентам_Балмико КАК ОсобыеКвантыКратностиПоКонтрагентам_Балмико
		|	ГДЕ
		|		ОсобыеКвантыКратностиПоКонтрагентам_Балмико.Контрагент = &Контрагент
		|		И ОсобыеКвантыКратностиПоКонтрагентам_Балмико.Номенклатура = &Номенклатура
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОсобыеКвантыКратности.Количество,
		|		2
		|	ИЗ
		|		РегистрСведений.ОсобыеКвантыКратности КАК ОсобыеКвантыКратности
		|	ГДЕ
		|		ОсобыеКвантыКратности.Территория = &Территория
		|		И ОсобыеКвантыКратности.Номенклатура = &Номенклатура) КАК вл";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Территория", Контрагент.ТерриторияБалмико);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Количество = Номенклатура.Кратность;
	
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	КонецЕсли;
	
	Кратность = Количество;	
	
КонецПроцедуры


&НаКлиенте
Процедура КнопкаОткрытьКартинку(Команда)
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаКартинки",Новый Структура("Номенклатура", Номенклатура),ЭтаФорма);
КонецПроцедуры
//\\Глебов
