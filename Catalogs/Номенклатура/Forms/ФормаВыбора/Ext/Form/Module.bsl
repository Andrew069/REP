// КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИИ //
&НаКлиенте
Функция ПоместитьТоварыНаКлиенте()
	МассивРезультата = Новый Массив;
	Для каждого текСтрока Из ПодобранныеТовары Цикл
		структСтроки = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Количество,Цена,Сумма,ПроцентСкидкиНаценки,Проект");
		ЗаполнитьЗначенияСвойств(структСтроки, текСтрока);
		МассивРезультата.Добавить( структСтроки );
	КонецЦикла;
	Возврат МассивРезультата;
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ДобавленыТовары", ПоместитьТоварыНаКлиенте(), ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоискТовараПриИзменении(Элемент)
	ОтборНоменклатурыСервер(ПоискТовара);
КонецПроцедуры

// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Замер времени выполнения Начало
	//ЗамерыОперацийОбщий.НачатьИлиОбновитьЗамер("ОткрытиеФормы.Номенклатура.ФормаВыбора", "",,,,Истина);
	
	Контрагент            = Параметры.Контрагент;
	Посещение             = Параметры.Посещение;
	
	ДоговорКонтрагента    = ДополнительныеФункцииСервер.ПолучитьАктуальныйДоговорКонтрагента(Контрагент);
	ТипЦен                = ДоговорКонтрагента.ТипЦен;
	
	ДатаДоставки          = Параметры.ДатаДоставки;
	ТекГруппаНоменклатуры = Константы.ГруппаПродуктов_ВсяПродукция.Получить();
	
	ЭтоВозврат            = Параметры.ЭтоВозврат;
	
	ЭтоСнятиеОстатков	  = (Параметры.Свойство("ЭтоСнятиеОстатков") И ТипЗнч(Параметры.ЭтоСнятиеОстатков) = Тип("Булево") И Параметры.ЭтоСнятиеОстатков);
	
	ТекДокумент			  = Параметры.ТекДокумент;
	
	Если Не ЗначениеЗаполнено(ТекГруппаНоменклатуры) Тогда
		Выборка = Справочники.ГруппыНоменклатуры.Выбрать();
		Если Выборка.Следующий() Тогда
			ТекГруппаНоменклатуры = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;	
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресХранилищаТоваров) Тогда
		ТабТовары = ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаТоваров);
		Если ЭтоСнятиеОстатков Тогда
			ТабТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры","Количество");
		Иначе
			ТабТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,ПроцентСкидкиНаценки,Цена","Количество,Сумма");
		КонецЕсли;
		ПодобранныеТовары.Загрузить(ТабТовары);
	КонецЕсли;
	
	ДополнительныеФункцииСервер.ЗапросДляОтбораНоменклатуры_Дерево(ЭтаФорма);
	
	ОбновитьПоказателиДереваНоменклатуры();
	
	Заголовок = ?(ЭтоВозврат, "Возврат", "Заказ") + " на " + Формат(Параметры.ДатаДоставки,"ДФ=dd.MM.yyyy");
	Если ЭтоВозврат Тогда
		Элементы.SKUВЗаказе.Заголовок = "SKU в возврате";
		Элементы.СуммаЗаказа.Заголовок = "Сумма возврата";
	КонецЕсли;
	
	Элементы.ДеревоТоваров.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ВидимостьСтроки", Истина));
	
	РассчитатьИтогиЗаказа();
	
	Если ЭтоСнятиеОстатков Тогда
		Элементы.ДеревоТоваровГруппаЦенаСумма.Видимость = Ложь;
		Элементы.ДеревоТоваровНоменклатура.РастягиватьПоГоризонтали = Истина;
		Элементы.ДеревоТоваровГруппаПродажиВозвратыТекущие.РастягиватьПоГоризонтали = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ДопустимаяСуммаЗаказаНаБонусЗаВозврат") И ТипЗнч(Параметры.ДопустимаяСуммаЗаказаНаБонусЗаВозврат) = Тип("Число") Тогда
		ДопустимаяСуммаЗаказаНаБонусЗаВозврат = Параметры.ДопустимаяСуммаЗаказаНаБонусЗаВозврат;
		Элементы.ДекорацияВидЗаказа.Видимость = Истина;
		Элементы.ДекорацияВидЗаказа.Заголовок = "Заказ на бонус за возврат до " + Формат(ДопустимаяСуммаЗаказаНаБонусЗаВозврат, "ЧДЦ=2") + " руб.";
	Иначе
		ДопустимаяСуммаЗаказаНаБонусЗаВозврат = 0;
		Элементы.ДекорацияВидЗаказа.Видимость = Ложь;
	КонецЕсли;
	
	//Замер времени выполнения Конец
	//ЗамерыОперацийОбщий.ЗавершитьЗамер("ОткрытиеФормы.Номенклатура.ФормаВыбора",,);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтрокуДереваНоменклатурыРекурсивно (СтрокаНоменклатуры, СоответствиеРодителей)
	Если Не СтрокаНоменклатуры.ЭтоГруппа Тогда
		Отбор               = Новый Структура ("Номенклатура",СтрокаНоменклатуры.Номенклатура);
		ИскомыеСтрокиТовары = ПодобранныеТовары.НайтиСтроки(Отбор);
		Если ИскомыеСтрокиТовары.Количество() > 0 Тогда
    		ИскомаяСтрока = ИскомыеСтрокиТовары[0];
			СтрокаНоменклатуры.КоличествоЗаказано     = ИскомаяСтрока.Количество;
			СтрокаНоменклатуры.СуммаЗаказано          = ИскомаяСтрока.Сумма;
			СтрокаНоменклатуры.ПроцентСкидкиНаценки   = ИскомаяСтрока.ПроцентСкидкиНаценки;	
		Иначе
			СтрокаНоменклатуры.КоличествоЗаказано     = 0;
			СтрокаНоменклатуры.СуммаЗаказано          = 0;
			СтрокаНоменклатуры.ПроцентСкидкиНаценки   = 0;	
		КонецЕсли;	
		СтрокаНоменклатуры.ПродажиВозвратыТекущие = "" + Формат(СтрокаНоменклатуры.ПродажиТекПоставка + ?(ЭтоВозврат,0,СтрокаНоменклатуры.КоличествоЗаказано),"ЧДЦ=; ЧН=0; ЧГ=0") + "/" + Формат(СтрокаНоменклатуры.ВозвратыТекПоставка + ?(ЭтоВозврат,СтрокаНоменклатуры.КоличествоЗаказано,0),"ЧДЦ=; ЧН=0; ЧГ=0");
		Если СтрокаНоменклатуры.ПродажиВозвратыТекущие = "0/0" Тогда
			СтрокаНоменклатуры.ПродажиВозвратыТекущие = "";
		КонецЕсли;
		ТекСКУ = СоответствиеРодителей.Получить(СтрокаНоменклатуры.ГруппаРодитель);
		Если ТекСКУ = Неопределено Тогда
			ТекСКУ = 0;
		КонецЕсли;	
		Если СтрокаНоменклатуры.КоличествоЗаказано > 0 Тогда
			СоответствиеРодителей.Вставить(СтрокаНоменклатуры.ГруппаРодитель,ТекСКУ + 1);
		Иначе
			СоответствиеРодителей.Вставить(СтрокаНоменклатуры.ГруппаРодитель,ТекСКУ);
		КонецЕсли;
		СтрокаНоменклатуры.ТекстПодобрано = Формат(СтрокаНоменклатуры.Цена,"ЧДЦ=2");
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ОбновитьПоказателиДереваНоменклатуры ()
	СоответствиеРодителей = Новый Соответствие;
	Для Каждого СтрокаНоменклатуры Из ДеревоТоваров Цикл
		ОбновитьСтрокуДереваНоменклатурыРекурсивно(СтрокаНоменклатуры,СоответствиеРодителей);
	КонецЦикла;
	Для Каждого Эл Из СоответствиеРодителей Цикл
		СтруктураПоиска = Новый Структура("ЭтоГруппа,Номенклатура",Истина,Эл.Ключ);
		ИскомыеСтроки = ДеревоТоваров.НайтиСтроки(СтруктураПоиска);
		Для Каждого ИскомаяСтрока Из ИскомыеСтроки Цикл
			ИскомаяСтрока.ПодобраноSKU   = Эл.Значение;
			ИскомаяСтрока.ТекстПодобрано = ?(Эл.Значение = 0,"",Эл.Значение);
		КонецЦикла;	
	КонецЦикла;	
КонецПроцедуры	                                    

&НаСервере
Процедура ИзменитьКоличествоТоваров (Структура)
	СтруктураПоиска = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры");
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска,Структура);
	ИскомыеСтроки   = ПодобранныеТовары.НайтиСтроки(СтруктураПоиска);
	Если ИскомыеСтроки.Количество() = 0 Тогда
		ИскомаяСтрока = ПодобранныеТовары.Добавить();
		ЗаполнитьЗначенияСвойств(ИскомаяСтрока,СтруктураПоиска);
	Иначе
		ИскомаяСтрока = ИскомыеСтроки[0];
	КонецЕсли;
	
	ИскомаяСтрока.Количество           = Структура.КоличествоЗаказано;
	ИскомаяСтрока.Цена                 = Структура.Цена;
	ИскомаяСтрока.ПроцентСкидкиНаценки = Структура.ПроцентСкидкиНаценки;
	ИскомаяСтрока.Сумма                = Структура.Цена * ИскомаяСтрока.Количество * (1 - Структура.ПроцентСкидкиНаценки / 100);
	
	//Если Не ЭтоВозврат Тогда
		КопияТовары    = ПодобранныеТовары.Выгрузить();
		ТекстСообщения = "";
		СтруктураШапки = Новый Структура("Контрагент,ДоговорКонтрагента,ДатаОтгрузки",Контрагент,ДоговорКонтрагента,ДатаДоставки);
		Если ЭтоВозврат Тогда
			Балмико_УправлениеАкциями.ЗаполнитьТабличнуюЧастьПоАкцииВозврат(КопияТовары,СтруктураШапки);
		Иначе
			Балмико_УправлениеАкциями.ЗаполнитьТабличнуюЧастьПоАкции(КопияТовары,СтруктураШапки, ТекстСообщения);
		КонецЕсли;
		ПодобранныеТовары.Загрузить(КопияТовары);
	//КонецЕсли;
	
	ОбновитьПоказателиДереваНоменклатуры();
	
	РассчитатьИтогиЗаказа();
КонецПроцедуры	

&НаСервере
Функция ПоместитьТовары()
	Возврат ПоместитьВоВременноеХранилище(ПодобранныеТовары.Выгрузить(), Новый УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ОтборНоменклатурыСервер (Знач Текст)
	Для Каждого СтрокаТЧ Из ДеревоТоваров Цикл
		СтрокаТЧ.ОтборПоФильтру = Ложь;
	КонецЦикла;	
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Элементы.ДеревоТоваров.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ВидимостьСтроки",Истина));
		Элементы.ДеревоТоваров.Обновить();
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Артикул ПОДОБНО &СтрокаПоиска
	|	ИЛИ Номенклатура.Наименование ПОДОБНО &СтрокаПоиска";
	Запрос.УстановитьПараметр("СтрокаПоиска","%" + Текст + "%");
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	МассивГрупп = Новый Массив;
	Для Каждого СтрокаТЧ Из Рез Цикл
		СтруктураПоиска = Новый Структура("Номенклатура",СтрокаТЧ.Ссылка);
		Для Каждого ИскомаяСтрока Из ДеревоТоваров.НайтиСтроки(СтруктураПоиска) Цикл
			ИскомаяСтрока.ОтборПоФильтру = Истина;
			Если МассивГрупп.Найти(ИскомаяСтрока.ГруппаРодитель) = Неопределено Тогда
				МассивГрупп.Добавить(ИскомаяСтрока.ГруппаРодитель);
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;	
	Для Каждого мРодитель Из МассивГрупп Цикл
		СтруктураПоиска = Новый Структура("Номенклатура",мРодитель);
		Для Каждого ИскомаяСтрока Из ДеревоТоваров.НайтиСтроки(СтруктураПоиска) Цикл
			ИскомаяСтрока.ОтборПоФильтру = Истина;
		КонецЦикла;	
	КонецЦикла;
	
	Элементы.ДеревоТоваров.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ВидимостьСтроки,ОтборПоФильтру",Истина,Истина));
	Элементы.ДеревоТоваров.Обновить();
КонецПроцедуры	

&НаКлиенте
Процедура ПоискТовараОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ПоискТовара = Элемент.ТекстРедактирования;
	ОтборНоменклатурыСервер(ПоискТовара);
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайти(Команда)
	ОтборНоменклатурыСервер(ПоискТовара);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранить(Команда)
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиЗаказа ()
	SKUВЗаказе  = ПодобранныеТовары.Количество();
	СуммаЗаказа = ПодобранныеТовары.Итог("Сумма");
КонецПроцедуры	

// ОБРАБОТЧИКИ СОБЫТИЙ ДЕРЕВА //

&НаКлиенте
Процедура ДеревоТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	//ТекСтрока = ДеревоТоваров.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ТекСтрока = Элементы.ДеревоТоваров.ТекущиеДанные;
	Если ТекСтрока.ЭтоГруппа Тогда
		Если ТекИдентификаторСтроки = ВыбраннаяСтрока Тогда
			ТекСтрока.КартинкаСтроки = БиблиотекаКартинок.Папка;
			НайденныеСтроки = ДеревоТоваров.НайтиСтроки(Новый Структура("ГруппаРодитель,ЭтоГруппа",ТекСтрока.ГруппаРодитель,Ложь));
			Для Каждого СтрокаПодч Из НайденныеСтроки Цикл
				СтрокаПодч.ВидимостьСтроки = Не СтрокаПодч.ВидимостьСтроки;
			КонецЦикла;
			ТекИдентификаторСтроки = 0;
		Иначе
			ПредСтрока                = ДеревоТоваров.НайтиПоИдентификатору(ТекИдентификаторСтроки);
			ПредСтрока.КартинкаСтроки = БиблиотекаКартинок.Папка;
			НайденныеСтроки = ДеревоТоваров.НайтиСтроки(Новый Структура("ГруппаРодитель,ЭтоГруппа",ПредСтрока.ГруппаРодитель,Ложь));
			Для Каждого СтрокаПодч Из НайденныеСтроки Цикл
				СтрокаПодч.ВидимостьСтроки = ЛОЖЬ;
			КонецЦикла;
			ТекСтрока.КартинкаСтроки = БиблиотекаКартинок.ПапкаОткрытая;
			НайденныеСтроки = ДеревоТоваров.НайтиСтроки(Новый Структура("ГруппаРодитель,ЭтоГруппа",ТекСтрока.ГруппаРодитель,Ложь));
			Для Каждого СтрокаПодч Из НайденныеСтроки Цикл
				СтрокаПодч.ВидимостьСтроки = Истина;
			КонецЦикла;
			ТекИдентификаторСтроки = ВыбраннаяСтрока;
		КонецЕсли;
		Элементы.ДеревоТоваров.Обновить();
		мСтруктура = Новый Структура("ВидимостьСтроки",Истина);
		Если Не ПустаяСтрока(ПоискТовара) Тогда
			мСтруктура.Вставить("ОтборПоФильтру",Истина);
		КонецЕсли;
		//Киселев
		//Элементы.ДеревоТоваров.ОтборСтрок = Новый ФиксированнаяСтруктура(мСтруктура);
		//Элементы.ДеревоТоваров.Обновить();
		//ЭтаФорма.ОбновитьОтображениеДанных();
	Иначе	
		Если ТекСтрока.ЗапретЗаказа И Не ЭтоВозврат Тогда
			Возврат;
		КонецЕсли;	
		Парам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Цена,ЕдиницаИзмерения,Остаток,КоличествоЗаказано,СуммаЗаказано,ПроцентСкидкиНаценки,ОграничениеЗаказа,ЦенаБезСкидки");
		ЗаполнитьЗначенияСвойств(Парам,ТекСтрока);
		Парам.Вставить("Контрагент"  ,Контрагент);
		Парам.Вставить("ЭтоВозврат"  ,ЭтоВозврат);
		Парам.Вставить("ДатаДоставки",ДатаДоставки);
		Парам.Вставить("ЭтоСнятиеОстатков", ЭтоСнятиеОстатков);
		СтандартнаяОбработка = ЛОЖЬ;
		ОписаниеОповещение = Новый ОписаниеОповещения("ПодборТоваровЗавершение",ЭтаФорма);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВводаПараметровНоменклатуры", Парам, ЭтаФорма,,,,ОписаниеОповещение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодборТоваровЗавершение(Рез, ДополнительныеПараметры) Экспорт
	Если Рез <> Неопределено Тогда
		ИзменитьКоличествоТоваров(Рез);
		Элементы.ДеревоТоваров.Обновить();
	КонецЕсли; 
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Всп = "";
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровПриАктивизацииСтроки(Элемент)
	Всп = "";
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровПередРазворачиванием(Элемент, Строка, Отказ)
	Всп = "";
КонецПроцедуры
