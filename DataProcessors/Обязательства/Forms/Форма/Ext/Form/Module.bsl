
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	
	ТекТП = Константы.ТекущийПользователь.Получить().ФизЛицо;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТорговыйПредставитель",ТекТП);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧ.ИмяГруппировки КАК ИмяГруппировки,
	|	ТЧ.Группировка КАК Группировка,
	|	СУММА(ТЧ.АТТ_НедельныйПлан) КАК АТТ_НедельныйПлан,
	|	СУММА(ТЧ.АТТ_НедельныйФакт) КАК АТТ_НедельныйФакт,
	|	СУММА(ТЧ.Упаковки_НедельныйПлан) КАК Упаковки_НедельныйПлан,
	|	СУММА(ТЧ.Упаковки_НедельныйФакт) КАК Упаковки_НедельныйФакт,
	|	СУММА(ТЧ.Упаковки_Прогноз) КАК Упаковки_Прогноз,
	|	СУММА(ТЧ.Упаковки_ДневнойПлан) КАК Упаковки_ДневнойПлан,
	|	СУММА(ТЧ.Упаковки_ДневнойФакт) КАК Упаковки_ДневнойФакт
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОС_ПланыПродаж.Номенклатура КАК Группировка,
	|		0 КАК АТТ_НедельныйПлан,
	|		0 КАК АТТ_НедельныйФакт,
	|		ОС_ПланыПродаж.НедельныйПлан КАК Упаковки_НедельныйПлан,
	|		ОС_ПланыПродаж.НедельныйФакт КАК Упаковки_НедельныйФакт,
	|		ОС_ПланыПродаж.Прогноз КАК Упаковки_Прогноз,
	|		ОС_ПланыПродаж.ДневнойПлан КАК Упаковки_ДневнойПлан,
	|		ОС_ПланыПродаж.ДневнойФакт КАК Упаковки_ДневнойФакт,
	|		""ОБЯЗАТЕЛЬСТВА"" КАК ИмяГруппировки
	|	ИЗ
	|		РегистрСведений.ОС_ПланыПродаж КАК ОС_ПланыПродаж
	|	ГДЕ
	|		ОС_ПланыПродаж.РазрезПланирования = ЗНАЧЕНИЕ(Перечисление.Балмико_РазрезыПланирования.Упаковки)
	|		И ОС_ПланыПродаж.ТорговыйПредставитель = &ТорговыйПредставитель
	|		И ОС_ПланыПродаж.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОС_ПланыПродаж.Номенклатура,
	|		ОС_ПланыПродаж.НедельныйПлан,
	|		ОС_ПланыПродаж.НедельныйФакт,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		""ОБЯЗАТЕЛЬСТВА""
	|	ИЗ
	|		РегистрСведений.ОС_ПланыПродаж КАК ОС_ПланыПродаж
	|	ГДЕ
	|		ОС_ПланыПродаж.РазрезПланирования = ЗНАЧЕНИЕ(Перечисление.Балмико_РазрезыПланирования.АТТ)
	|		И ОС_ПланыПродаж.ТорговыйПредставитель = &ТорговыйПредставитель
	|		И ОС_ПланыПродаж.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОС_ПланыПродаж.НоменклатурнаяГруппа,
	|		0,
	|		0,
	|		ОС_ПланыПродаж.НедельныйПлан,
	|		ОС_ПланыПродаж.НедельныйФакт,
	|		ОС_ПланыПродаж.Прогноз,
	|		ОС_ПланыПродаж.ДневнойПлан,
	|		ОС_ПланыПродаж.ДневнойФакт,
	|		""ОБЯЗАТЕЛЬСТВА (НОМЕНКЛАТУРНЫЕ ГРУППЫ)""
	|	ИЗ
	|		РегистрСведений.ОС_ПланыПродаж КАК ОС_ПланыПродаж
	|	ГДЕ
	|		ОС_ПланыПродаж.РазрезПланирования = ЗНАЧЕНИЕ(Перечисление.Балмико_РазрезыПланирования.Упаковки)
	|		И ОС_ПланыПродаж.ТорговыйПредставитель = &ТорговыйПредставитель
	|		И ОС_ПланыПродаж.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОС_ПланыПродаж.НоменклатурнаяГруппа,
	|		ОС_ПланыПродаж.НедельныйПлан,
	|		ОС_ПланыПродаж.НедельныйФакт,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		""ОБЯЗАТЕЛЬСТВА (НОМЕНКЛАТУРНЫЕ ГРУППЫ)""
	|	ИЗ
	|		РегистрСведений.ОС_ПланыПродаж КАК ОС_ПланыПродаж
	|	ГДЕ
	|		ОС_ПланыПродаж.РазрезПланирования = ЗНАЧЕНИЕ(Перечисление.Балмико_РазрезыПланирования.АТТ)
	|		И ОС_ПланыПродаж.ТорговыйПредставитель = &ТорговыйПредставитель
	|		И ОС_ПланыПродаж.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)) КАК ТЧ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧ.Группировка,
	|	ТЧ.ИмяГруппировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяГруппировки,
	|	Группировка
	|ИТОГИ
	|	МАКСИМУМ(ИмяГруппировки) КАК Группировка,
	|	СРЕДНЕЕ(АТТ_НедельныйПлан),
	|	СРЕДНЕЕ(АТТ_НедельныйФакт),
	|	СРЕДНЕЕ(Упаковки_НедельныйПлан),
	|	СРЕДНЕЕ(Упаковки_НедельныйФакт),
	|	СРЕДНЕЕ(Упаковки_Прогноз),
	|	СРЕДНЕЕ(Упаковки_ДневнойПлан),
	|	СРЕДНЕЕ(Упаковки_ДневнойФакт)
	|ПО
	|	ИмяГруппировки";

	Рез = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	Для Каждого СтрокаРаздел Из Рез.Строки Цикл
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.Заполнить(СтрокаРаздел);
		ТабДок.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Шапка");
		ТабДок.Вывести(Область);
		Область = Макет.ПолучитьОбласть("СтрокаТП");
		Область.Параметры.Заполнить(СтрокаРаздел);
		Область.Параметры.ТорговыйПредставитель = ТекТП;
		
		Ячейка = ТабДок.Область(ТабДок.ВысотаТаблицы,6,ТабДок.ВысотаТаблицы,6);
		Ячейка.ЦветФона = ?(СтрокаРаздел.Упаковки_Прогноз < 100, Новый Цвет(255,0,0), Новый Цвет(0,255,0));
		
		ВыводитьНГ = СтрокаРаздел.Группировка = "Обязательства (Номенклатурные группы)";
		Для Каждого СтрокаПодч Из СтрокаРаздел.Строки Цикл
			Если ВыводитьНГ Тогда 
				Область = Макет.ПолучитьОбласть("СтрокаНоменклатурнаяГруппа");
				Область.Параметры.Заполнить(СтрокаПодч);
				ТабДок.Вывести(Область);
				
				Ячейка = ТабДок.Область(ТабДок.ВысотаТаблицы,6,ТабДок.ВысотаТаблицы,6);
				Ячейка.ЦветФона = ?(СтрокаПодч.Упаковки_Прогноз < 100, Новый Цвет(255,0,0), Новый Цвет(0,255,0));
			КонецЕсли;
			Область = Макет.ПолучитьОбласть("СтрокаНоменклатура");
			Область.Параметры.Заполнить(СтрокаПодч);
			ТабДок.Вывести(Область);
			
			Ячейка = ТабДок.Область(ТабДок.ВысотаТаблицы,6,ТабДок.ВысотаТаблицы,6);
			Ячейка.ЦветФона = ?(СтрокаПодч.Упаковки_Прогноз < 100, Новый Цвет(255,0,0), Новый Цвет(0,255,0));
		КонецЦикла;	
		Область = Макет.ПолучитьОбласть("Итого");
		ТабДок.Вывести(Область);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого Эл Из Обязательства.ПолучитьЭлементы() Цикл
		Элементы.Обязательства.Развернуть(Эл.ПолучитьИдентификатор());
	КонецЦикла;	
КонецПроцедуры
