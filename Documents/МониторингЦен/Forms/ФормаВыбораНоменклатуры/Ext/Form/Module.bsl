// КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаКлиенте
Процедура ПриВыбореГруппыНоменклатуры(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		ТекГруппаНоменклатуры = Результат;
		ОбновитьГруппировкуНоменклатуры();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаНоменклатуры(Команда)
	// 2017-04-27 МСН
	Форма = ОткрытьФорму( "Справочник.ГруппыНоменклатуры.ФормаВыбора", , ЭтаФорма, , , , Новый ОписаниеОповещения( "ПриВыбореГруппыНоменклатуры", ЭтотОбъект ), );
	Форма.ЗакрыватьПриВыборе = Истина;
	Форма.ЗакрыватьПриЗакрытииВладельца = Истина;
	
	//Рез = ОткрытьФормуМодально("Справочник.ГруппыНоменклатуры.ФормаВыбора");
	//Если Рез <> Неопределено Тогда
	//	ТекГруппаНоменклатуры = Рез;
	//	ОбновитьГруппировкуНоменклатуры();
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриВводеЦеныНоменклатуры(Результат, ДопПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		ИзменитьКоличествоТоваров(Результат);
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.Список.ТекущиеДанные; 
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Парам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Цена,ЕдиницаИзмерения");
	ЗаполнитьЗначенияСвойств(Парам, ТекСтрока);
	Парам.Вставить("Контрагент", Контрагент);
	СтандартнаяОбработка = Ложь;
	
	// 2017-04-27 МСН
	Форма = ОткрытьФорму( "Справочник.Номенклатура.Форма.ФормаВводаЦены", Парам, ЭтаФорма, , , , Новый ОписаниеОповещения( "ПриВводеЦеныНоменклатуры", ЭтотОбъект ), );
	Форма.ЗакрыватьПриВыборе = Истина;
	Форма.ЗакрыватьПриЗакрытииВладельца = Истина;
	
	//Рез = ОткрытьФормуМодально("Справочник.Номенклатура.Форма.ФормаВводаЦены",Парам);
	//Если Рез <> Неопределено Тогда
	//	ИзменитьКоличествоТоваров(Рез);
	//КонецЕсли; 
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ДобавленыТовары", ПоместитьТовары(), ЭтаФорма);
КонецПроцедуры

// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Контрагент            = Параметры.Контрагент;
	ДатаДоставки          = ТекущаяДата();
	ДоговорКонтрагента    = ДополнительныеФункцииСервер.ПолучитьАктуальныйДоговорКонтрагента(Контрагент);
	ТипЦен                = ДоговорКонтрагента.ТипЦен;
	Посещение  = Параметры.Посещение;
	ТекГруппаНоменклатуры = Константы.ГруппаПродуктов_ВсяПродукция.Получить();
	Если ЭтоАдресВременногоХранилища(Параметры.АдресХранилищаТоваров) Тогда
		ТабТовары  = ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаТоваров);
		ТабТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры,Цена");
		ПодобранныеТовары.Загрузить(ТабТовары);
	КонецЕсли;
	ДополнительныеФункцииСервер.ЗапросДляОтбораНоменклатуры(ЭтаФорма);
	ОбновитьГруппировкуНоменклатуры();
	Заголовок = "Мониторинг цен от " + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	Для Каждого СтрокаТЧ Из СписокТоваров Цикл
		ОбновитьСтрокуНоменклатуры(СтрокаТЧ);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьГруппировкуНоменклатуры ()
	ИДПриоритета = Формат(ТекГруппаНоменклатуры.Приоритет,"ЧН=0; ЧГ=0") + "_" + ТекГруппаНоменклатуры.Код;
	ОтборСтрок   = Новый Структура("ПринадлежитГруппе" + ИДПриоритета,Истина);
	Элементы.Список.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	КоличествоНоменклатуры     = СписокТоваров.НайтиСтроки(ОтборСтрок).Количество();
	Элементы.НадписьКоличествоПозиций.Заголовок = "Всего: " + КоличествоНоменклатуры;
	
	Если ЗначениеЗаполнено(ТекГруппаНоменклатуры) Тогда
		Элементы.ГруппировкаНоменклатуры.Заголовок = ТекГруппаНоменклатуры.Наименование;
	Иначе
		Элементы.ГруппировкаНоменклатуры.Заголовок = "ВСЯ ПРОДУКЦИЯ";
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ИзменитьКоличествоТоваров (Структура)
	СтруктураПоиска = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры");
	ЗаполнитьЗначенияСвойств(СтруктураПоиска,Структура);
	ИскомыеСтроки   = ПодобранныеТовары.НайтиСтроки(СтруктураПоиска);
	Если ИскомыеСтроки.Количество() = 0 Тогда
		ИскомаяСтрока = ПодобранныеТовары.Добавить();
		ЗаполнитьЗначенияСвойств(ИскомаяСтрока,СтруктураПоиска);
	Иначе
		ИскомаяСтрока = ИскомыеСтроки[0];
	КонецЕсли;
	ИскомаяСтрока.Цена  = Структура.Цена;
	ИскомыеСтроки       = СписокТоваров.НайтиСтроки(СтруктураПоиска);
	Для Каждого ИскомаяСтрока Из ИскомыеСтроки Цикл
		ОбновитьСтрокуНоменклатуры(ИскомаяСтрока);
	КонецЦикла;	
КонецПроцедуры	

&НаСервере
Функция ПоместитьТовары ()
	Возврат ПоместитьВоВременноеХранилище(ПодобранныеТовары.Выгрузить(),Новый УникальныйИдентификатор);
КонецФункции	

&НаКлиенте
Процедура ПоискТовараПриИзменении(Элемент)
	ОтборНоменклатурыСервер(ПоискТовара);
КонецПроцедуры

&НаСервере
Процедура ОтборНоменклатурыСервер (Знач Текст)
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Элементы.Список.ОтборСтрок = Неопределено;
	Иначе
		Элементы.Список.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура ("Номенклатура",Текст));
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ПоискТовараОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	ПоискТовара = Элемент.ТекстРедактирования;
	ОтборНоменклатурыСервер(ПоискТовара);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтрокуНоменклатуры (СтрокаНоменклатуры)
	Отбор               = Новый Структура ("Номенклатура,ХарактеристикаНоменклатуры");
	ЗаполнитьЗначенияСвойств(Отбор,СтрокаНоменклатуры);
	ИскомыеСтрокиТовары = ПодобранныеТовары.НайтиСтроки(Отбор);
	Если ИскомыеСтрокиТовары.Количество() = 1 Тогда
		СтрокаНоменклатуры.Цена = ИскомыеСтрокиТовары[0].Цена;
	ИначеЕсли ИскомыеСтрокиТовары.Количество() = 0 Тогда
		СтрокаНоменклатуры.Цена = 0;
	Иначе
		ВызватьИсключение "";
	КонецЕсли;	
	Элементы.Итоги.Заголовок = "Строк: " + ПодобранныеТовары.Количество();
КонецПроцедуры	
