
// КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаКлиенте
Процедура ШаблонАнкетыПриИзменении(Элемент)
	НастроитьШаблонАнкеты();
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораЗначения(Элемент,ДанныеВыбора,СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	Стр = Новый Структура;
	Стр.Вставить("Вопрос"      ,ПолучитьВопросПоИмени(Элемент.Имя));
	Стр.Вставить("АдресТаблицы",АдресТаблицы(Элемент.Имя));
	Стр.Вставить("ИмяЭлемента" ,Элемент.Имя);
	
	Оповещение = Новый ОписаниеОповещения("ВыборСпискаЗначенийОкончание", ЭтаФорма, Стр);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСпискаЗначений",Стр,ЭтаФорма,,,,Оповещение);
КонецПроцедуры	

&НаКлиенте
Процедура ПриИзмененииЗначения(Элемент)
	Всп = "";
КонецПроцедуры

&НаКлиенте
Процедура ВыборСпискаЗначенийОкончание(Рез, ДополнительныеПараметры) Экспорт
	ЗагрузитьПолученныеЗначения(Рез,ДополнительныеПараметры.ИмяЭлемента);
КонецПроцедуры	

// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаСервере
Функция АдресТаблицы(ИмяЭл)
	Возврат ПоместитьВоВременноеХранилище(ЭтаФорма[СтрЗаменить(ИмяЭл,"_Представление","")].Выгрузить(), Новый УникальныйИдентификатор);
КонецФункции	

&НаСервере
Процедура ЗагрузитьПолученныеЗначения(АдресТаблицы,ИмяЭлемента)
	
	Если Не ЗначениеЗаполнено(АдресТаблицы) Или Не ЭтоАдресВременногоХранилища(АдресТаблицы) Тогда
		Возврат;
	КонецЕсли;	
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресТаблицы);
	ТЗ.Колонки.ВариантОтвета.Имя = "Ответ";
	ЭтаФорма[ИмяЭлемента].Загрузить(ТЗ);
	
	ТекПредставление = "";
	Для Каждого СтрокаТЧ Из ТЗ Цикл
		ТекПредставление = ТекПредставление + ?(ПустаяСтрока(ТекПредставление),"",", ") + СтрокаТЧ.Ответ + ?(ПустаяСтрока(СтрокаТЧ.Пояснение),"",":" + СтрокаТЧ.Пояснение);
	КонецЦикла;
	
	ЭтаФорма[ИмяЭлемента + "_Представление"] = ТекПредставление;
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьВопросПоИмени(Знач ИмяЭл)
	ИД      = СтрЗаменить(ИмяЭл,"Поле_","");
	ИД      = СтрЗаменить(ИД,"_Представление","");
	ИД      = СтрЗаменить(ИД,"_","-");
	мСсылка = Справочники.ВопросыАнкетДляТП.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
	Возврат мСсылка;
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// 2017-05-02 МСН
	Если Параметры.Свойство("Ссылка") И ТипЗнч(Параметры.Ссылка) = Тип("ДокументСсылка.АнкетаТП") Тогда
		ЗначениеВРеквизитФормы(Параметры.Ссылка.ПолучитьОбъект(), "Объект");
	Иначе
		Если Параметры.Свойство("Контрагент") Тогда
			Объект.Контрагент = Параметры.Контрагент;
		КонецЕсли;
		Если Параметры.Свойство("Посещение") Тогда
			Объект.Посещение = Параметры.Посещение;
		КонецЕсли;
		Если Параметры.Свойство("ШаблонАнкеты") Тогда
			Объект.ШаблонАнкеты = Параметры.ШаблонАнкеты;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = Константы.ТекущийПользователь.Получить();
		Если Объект.ШаблонАнкеты.Пустая() Тогда
			Выборка = Справочники.ШаблонАнкетыДляТП.Выбрать();
			Если Выборка.Следующий() Тогда
				Объект.ШаблонАнкеты = Справочники.ШаблонАнкетыДляТП.НайтиПоНаименованию("Тест"); //вернуть как было Выборка.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Не Объект.ШаблонАнкеты.Пустая() И Объект.ШаблонАнкеты.Идентификатор = "АктуализацияКонтактныхДанных" Тогда
	Иначе
		ДополнительныеФункцииСервер.ПрисоединенныеФайлы_ИнициализироватьТаблицуПрисоединенныхФайлов(ЭтаФорма);
	КонецЕсли;
	НастроитьШаблонАнкеты();
	ЗагрузитьТекущиеЗначенияСервер();
	
	#Если Не МобильноеПриложениеСервер Тогда
		Элементы.ГруппаОтветы.Видимость = (Объект.Ответы.Количество()>0);
		Элементы.ГруппаНомерДата.Видимость = Истина;
	#КонецЕсли
КонецПроцедуры

&НаСервере
Процедура НастроитьШаблонАнкеты()
	
	Шаблон = Объект.ШаблонАнкеты;
	
	Если Шаблон = ТекШаблон Тогда
		Возврат;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВопросыАнкетДляТП.Ссылка
		|ИЗ
		|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
		|ГДЕ
		|	ВопросыАнкетДляТП.Владелец = &Шаблон
		|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВопросыАнкетДляТП.Код";
		Запрос.УстановитьПараметр("Шаблон",ТекШаблон);
		УдаляемыеРеквизиты = Новый Массив;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			мВопрос = Выборка.Ссылка;
			ИД      = СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()),"-","_");
			УдаляемыеРеквизиты.Добавить("Поле_" + ИД);
			Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
				УдаляемыеРеквизиты.Добавить("Поле_" + ИД + "_Представление");
			КонецЕсли;
			Если Элементы.Найти("Группа_" + ИД) <> Неопределено Тогда
				Элементы.Удалить(Элементы["Группа_" + ИД]);
			КонецЕсли;
		КонецЦикла;	
		ЭтаФорма.ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	КонецЕсли;	
	
	//Киселев наряд 0000003149.
	Если Объект.ШаблонАнкеты.ВопросыВыводитьПоОчереди Тогда
		ПодготовитьФормуДляДинамическогоВыведенияВопросов();
		ВывестиВопросНаФорму();
		Элементы.ГруппаКнопкиПеремещения.Видимость = Истина;
	Иначе
		ВывестиВсеВопросы();
		Элементы.ГруппаКнопкиПеремещения.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры	

//Киселев наряд 0000003149.
//Выводит вопросы списком
&НаСервере
Процедура ВывестиВсеВопросы()
	
	Перем текТерритория;
	
	мЭлементы = Элементы;
	Шаблон = Объект.ШаблонАнкеты;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВопросыАнкетДляТП.Ссылка
	|ИЗ
	|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
	|ГДЕ
	|	ВопросыАнкетДляТП.Владелец = &Шаблон
	|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВопросыАнкетДляТП.Код";
	Запрос.УстановитьПараметр("Шаблон",Шаблон);
	ДобавляемыеРеквизиты = Новый Массив;
	
	ТипЭл = Метаданные.Документы.АнкетаТП.ТабличныеЧасти.Ответы.Реквизиты.Ответ.Тип;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		мВопрос = Выборка.Ссылка;
		ИД      = СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()),"-","_");
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВводЗначения Тогда
			Если ТипЗнч(мВопрос.ТипСправочника) = Тип("Строка") 
				Или ТипЗнч(мВопрос.ТипСправочника) = Тип("Число")
				Или ТипЗнч(мВопрос.ТипСправочника) = Тип("Дата")
				Или ТипЗнч(мВопрос.ТипСправочника) = Тип("Булево")
				Тогда
				
				МассивТипов = Новый Массив;
				МассивТипов.Добавить(ТипЗнч(мВопрос.ТипСправочника));
				мТип = Новый ОписаниеТипов(МассивТипов);
				
			Иначе		
				мТип = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100));
			КонецЕсли;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборЗначенияИзСписка Тогда
			мТип = ТипЭл;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборИзСправочника Тогда
			мТипы = Новый Массив;
			мТипы.Добавить(ТипЗнч(мВопрос.ТипСправочника));
			мТип = Новый ОписаниеТипов(мТипы);
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			мТип = Новый ОписаниеТипов("ТаблицаЗначений");
		КонецЕсли;	
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Поле_" + ИД,мТип,,мВопрос.Наименование));
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Поле_" + ИД + "_Представление",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(100))));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Ответ", ТипЭл, "Поле_" + ИД));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Пояснение", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(255)), "Поле_" + ИД));
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Группа = мЭлементы.ГруппаАнкета;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		мВопрос = Выборка.Ссылка;
		ИД      = СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()),"-","_");
		
		//Группа             = Элементы.Добавить("Группа_" + ИД,Тип("ГруппаФормы"),мЭлементы.ГруппаАнкета);
		//Группа.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
		//Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		мПоле = мЭлементы.Добавить("Поле_" + ИД, Тип("ПолеФормы"), Группа);
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВводЗначения И Не ПустаяСтрока(мВопрос.Подсказка) Тогда
			мПолеПодсказка = мЭлементы.Добавить("Поле_" + ИД + "_Представление1", Тип("ДекорацияФормы"), Группа);
  			мПолеПодсказка.Заголовок = мВопрос.Подсказка;
			мПолеПодсказка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
		КонецЕсли;
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			мПоле.ПутьКДанным = "Поле_" + ИД + "_Представление";
		Иначе 	
			мПоле.ПутьКДанным = "Поле_" + ИД;
		КонецЕсли;
		
		мПоле.Вид            = ВидПоляФормы.ПолеВвода;
		мПоле.Заголовок      = мВопрос.Наименование;
		мПоле.ПодсказкаВвода = мВопрос.Подсказка;
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВводЗначения Тогда
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВВЕДИТЕ ЗНАЧЕНИЕ>";
			КонецЕсли;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборЗначенияИзСписка Тогда
			мПоле.РежимВыбораИзСписка = Истина;
			Для Каждого Эл Из мВопрос.ВариантыОтветов Цикл
				мПоле.СписокВыбора.Добавить(Эл.ВариантОтвета);
			КонецЦикла;
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВЫБЕРИТЕ ЗНАЧЕНИЕ>";
			КонецЕсли;	
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборИзСправочника Тогда
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВЫБЕРИТЕ ЗНАЧЕНИЕ>";
			КонецЕсли;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			мПоле.КнопкаВыбора  = Истина;
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВЫБЕРИТЕ ОДНО ИЛИ НЕСКОЛЬКО ЗНАЧЕНИЙ>";
			КонецЕсли;
			мПоле.УстановитьДействие("НачалоВыбора","НачалоВыбораЗначения");
		КонецЕсли;	
		
		Если мВопрос.ПроверкаЗаполнения Тогда
			Эл = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
			
			ЭлОтбора               = Эл.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(мПоле.ПутьКДанным);
			ЭлОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			ЭлОтбора.Использование = Истина;
			
			ЭлОформления = Эл.Оформление.Элементы.Найти("ЦветФона");
			ЭлОформления.Использование = Истина;
			ЭлОформления.Значение      = Новый Цвет(255,240,240);
			
			ЭлПоля = Эл.Поля.Элементы.Добавить();
			ЭлПоля.Поле = Новый ПолеКомпоновкиДанных(мПоле.Имя);
		КонецЕсли;
		
		Эл = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
		
		ЭлОтбора = Эл.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(мПоле.ПутьКДанным);
		ЭлОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Заполнено;
		ЭлОтбора.Использование = Истина;
		
		ЭлОформления = Эл.Оформление.Элементы.Найти("ЦветФона");
		ЭлОформления.Использование = Истина;
		ЭлОформления.Значение = Новый Цвет(240,255,240);
		
		ЭлПоля = Эл.Поля.Элементы.Добавить();
		ЭлПоля.Поле = Новый ПолеКомпоновкиДанных(мПоле.Имя);
		
		мПоле.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Верх;
		мПоле.ШрифтЗаголовка            = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина);
		мПоле.ОтображениеПодсказки      = ОтображениеПодсказки.ОтображатьСнизу;
		мПоле.УстановитьДействие("ПриИзменении", "ПриИзмененииЗначения");
		
		// 2017-06-15 МСН
		Если мВопрос.Наименование = "Территория" Тогда
			ЗапросТерритория = Новый Запрос;
			ЗапросТерритория.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Территории.Ссылка КАК Территория
			|ИЗ
			|	Справочник.Территории КАК Территории
			|ГДЕ
			|	Территории.ФБ_ТорговыйПредставитель = &ТорговыйПредставитель
			|
			|УПОРЯДОЧИТЬ ПО
			|	Код";
			ЗапросТерритория.УстановитьПараметр("ТорговыйПредставитель", Константы.ТекущийПользователь.Получить().ФизЛицо);
			ВыборкаТерритория = ЗапросТерритория.Выполнить().Выбрать();
			Если ВыборкаТерритория.Следующий() Тогда
				текТерритория = ВыборкаТерритория.Территория;
				Выполнить( "ЭтаФорма.Поле_" + ИД + " = текТерритория;" );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ТекШаблон = Шаблон;
	
КонецПроцедуры

//Киселев наряд 0000003149.
//Выводит вопросы поочередно в зависимости от ответа
#ОБЛАСТЬ ДИНАМИЧЕСКОЕ_ФОРМИРОВАНИЕ_ВОПРОСОВ

&НаСервере
Процедура ПодготовитьФормуДляДинамическогоВыведенияВопросов()
	
	//Создадим ТЗ с ответами, чтобы по ней потом перемещаться
	ДобавляемыеРеквизиты = Новый Массив;
	ТипЭл = Метаданные.Документы.АнкетаТП.ТабличныеЧасти.Ответы.Реквизиты.Ответ.Тип;
		
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТЗ_Ответов", ОписаниеТипаВыбора,,"ТЗ_Ответов"));
		
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ВопросыАнкетДляТП"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Вопрос", Новый ОписаниеТипов(Массив), "ТЗ_Ответов", "Вопрос"));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Ответ", ТипЭл, "ТЗ_Ответов", "Ответ"));
		
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	УдалитьВсеЭлементыСАнкеты();
	
	ЭтаФорма.КоманднаяПанель.Доступность = Ложь;
	
	ТекущийВопрос = Справочники.ВопросыАнкетДляТП.ПустаяСсылка();
	
	
	//Если объект не новый создадим все реквизиты и остановимся на оконсаниии анкеты
	
	Если Не Параметры.Ключ.Пустая() ТОгда
		
		Для каждого Стр из Объект.Ответы Цикл
			Нов = Этаформа.ТЗ_Ответов.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Стр);
			ВывестиВопросНаФорму(Стр.Вопрос);
		КонецЦикла;
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ВывестиВопросНаФорму(Значение_Вопрос = Неопределено)

	мЭлементы = Элементы;
	
	
	//Получаем вопрос
	Если Значение_Вопрос = Неопределено Тогда
		Значение_Вопрос = ПолучитьСледующийВопрос();
	КонецЕсли;
	
	//Если вопросов больше нет
	Если Значение_Вопрос = Неопределено Тогда
		
		//Удалим ранее созданные элементы
		УдалитьВсеЭлементыСАнкеты();
		
		мПолеПодсказка = мЭлементы.Добавить("Поле_Окончено", Тип("ДекорацияФормы"), Элементы.ГруппаАнкета);
		мПолеПодсказка.Заголовок = "АНКЕТИРОВАНИЕ ОКОНЧЕНО";
		мПолеПодсказка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Центр;
		
		Элементы.ВопросВперед.Доступность = Ложь;
		
		ЭтаФорма.КоманднаяПанель.Доступность = Истина;
		
		ТекущийВопрос = Справочники.ВопросыАнкетДляТП.ПустаяСсылка();
		
		Возврат;
		
	КонецЕсли;
		
	
	ДобавляемыеРеквизиты = Новый Массив;
	ТипЭл = Метаданные.Документы.АнкетаТП.ТабличныеЧасти.Ответы.Реквизиты.Ответ.Тип;
		
	Если Значение_Вопрос <> Неопределено Тогда
		
		ТекущийВопрос = Значение_Вопрос.Ссылка;
		
		мВопрос = Значение_Вопрос.Ссылка;
		ИД      = СтрЗаменить(Строка(Значение_Вопрос.Ссылка.УникальныйИдентификатор()),"-","_");
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВводЗначения Тогда
			Если ТипЗнч(мВопрос.ТипСправочника) = Тип("Строка") 
				Или ТипЗнч(мВопрос.ТипСправочника) = Тип("Число")
				Или ТипЗнч(мВопрос.ТипСправочника) = Тип("Дата")
				Или ТипЗнч(мВопрос.ТипСправочника) = Тип("Булево")
				Тогда
					
				МассивТипов = Новый Массив;
				МассивТипов.Добавить(ТипЗнч(мВопрос.ТипСправочника));
				мТип = Новый ОписаниеТипов(МассивТипов);
				
			Иначе		
				мТип = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100));
			КонецЕсли;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборЗначенияИзСписка Тогда
			мТип = ТипЭл;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборИзСправочника Тогда
			мТипы = Новый Массив;
			мТипы.Добавить(ТипЗнч(мВопрос.ТипСправочника));
			мТип = Новый ОписаниеТипов(мТипы);
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			мТип = Новый ОписаниеТипов("ТаблицаЗначений");
		КонецЕсли;	
			
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Поле_" + ИД,мТип,,мВопрос.Наименование));
			
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Поле_" + ИД + "_Представление",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(100))));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Ответ", ТипЭл, "Поле_" + ИД));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Пояснение", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(255)), "Поле_" + ИД));
		КонецЕсли;
		
		
		
	КонецЕсли;
	
	//Проверим реквизит, если он есть то не добавляем.
	ДобавитьРеквизит = Истина;
	МассивРеквизитов = ЭтаФорма.ПолучитьРеквизиты();
	Для каждого Стр из МассивРеквизитов Цикл
		Если Стр.Имя = "Поле_" + ИД Тогда
			ДобавитьРеквизит = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ДобавитьРеквизит ТОгда
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	КонецЕсли;
	
	
	
	Группа = мЭлементы.ГруппаАнкета;
	
	//Удалим ранее созданные элементы
	УдалитьВсеЭлементыСАнкеты();
		
		
	
	
	Если Значение_Вопрос <> НЕопределено Тогда
		мВопрос = Значение_Вопрос.Ссылка;
		ИД      = СтрЗаменить(Строка(Значение_Вопрос.Ссылка.УникальныйИдентификатор()),"-","_");
		
		//Группа             = Элементы.Добавить("Группа_" + ИД,Тип("ГруппаФормы"),мЭлементы.ГруппаАнкета);
		//Группа.Вид         = ВидГруппыФормы.ОбычнаяГруппа;
		//Группа.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		мПоле = мЭлементы.Добавить("Поле_" + ИД, Тип("ПолеФормы"), Группа);   //!!!
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВводЗначения И Не ПустаяСтрока(мВопрос.Подсказка) Тогда
			мПолеПодсказка = мЭлементы.Добавить("Поле_" + ИД + "_Представление1", Тип("ДекорацияФормы"), Группа);
  			мПолеПодсказка.Заголовок = мВопрос.Подсказка;
			мПолеПодсказка.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
		КонецЕсли;
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			мПоле.ПутьКДанным = "Поле_" + ИД + "_Представление";
		Иначе 	
			мПоле.ПутьКДанным = "Поле_" + ИД;
		КонецЕсли;
		
		мПоле.Вид            = ВидПоляФормы.ПолеВвода;
		мПоле.Заголовок      = мВопрос.Наименование;
		мПоле.ПодсказкаВвода = мВопрос.Подсказка;
		
		Если мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВводЗначения Тогда
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВВЕДИТЕ ЗНАЧЕНИЕ>";
			КонецЕсли;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборЗначенияИзСписка Тогда
			мПоле.РежимВыбораИзСписка = Истина;
			Для Каждого Эл Из мВопрос.ВариантыОтветов Цикл
				мПоле.СписокВыбора.Добавить(Эл.ВариантОтвета);
			КонецЦикла;
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВЫБЕРИТЕ ЗНАЧЕНИЕ>";
			КонецЕсли;	
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборИзСправочника Тогда
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВЫБЕРИТЕ ЗНАЧЕНИЕ>";
			КонецЕсли;
		ИначеЕсли мВопрос.ТипВопроса = Перечисления.ТипыВопросовАнкетДляТП.ВыборНесколькихЗначений Тогда
			мПоле.КнопкаВыбора  = Истина;
			Если Не ЗначениеЗаполнено(мВопрос.Подсказка) Тогда
				мПоле.ПодсказкаВвода      = "<ВЫБЕРИТЕ ОДНО ИЛИ НЕСКОЛЬКО ЗНАЧЕНИЙ>";
			КонецЕсли;
			мПоле.УстановитьДействие("НачалоВыбора","НачалоВыбораЗначения");
		КонецЕсли;	
		
		Если мВопрос.ПроверкаЗаполнения Тогда
			Эл = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
			
			ЭлОтбора               = Эл.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(мПоле.ПутьКДанным);
			ЭлОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеЗаполнено;
			ЭлОтбора.Использование = Истина;
			
			ЭлОформления = Эл.Оформление.Элементы.Найти("ЦветФона");
			ЭлОформления.Использование = Истина;
			ЭлОформления.Значение      = Новый Цвет(255,240,240);
			
			ЭлПоля = Эл.Поля.Элементы.Добавить();
			ЭлПоля.Поле = Новый ПолеКомпоновкиДанных(мПоле.Имя);
		КонецЕсли;
		
		Эл = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
		
		ЭлОтбора = Эл.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(мПоле.ПутьКДанным);
		ЭлОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Заполнено;
		ЭлОтбора.Использование = Истина;
		
		ЭлОформления = Эл.Оформление.Элементы.Найти("ЦветФона");
		ЭлОформления.Использование = Истина;
		ЭлОформления.Значение = Новый Цвет(240,255,240);
		
		ЭлПоля = Эл.Поля.Элементы.Добавить();
		ЭлПоля.Поле = Новый ПолеКомпоновкиДанных(мПоле.Имя);
		
		мПоле.ПоложениеЗаголовка        = ПоложениеЗаголовкаЭлементаФормы.Верх;
		мПоле.ШрифтЗаголовка            = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина);
		мПоле.ОтображениеПодсказки      = ОтображениеПодсказки.ОтображатьСнизу;
		мПоле.УстановитьДействие("ПриИзменении", "ПриИзмененииЗначения");
		
		// 2017-06-15 МСН
		Если мВопрос.Наименование = "Территория" Тогда
			ЗапросТерритория = Новый Запрос;
			ЗапросТерритория.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Территории.Ссылка КАК Территория
			|ИЗ
			|	Справочник.Территории КАК Территории
			|ГДЕ
			|	Территории.ФБ_ТорговыйПредставитель = &ТорговыйПредставитель
			|
			|УПОРЯДОЧИТЬ ПО
			|	Код";
			ЗапросТерритория.УстановитьПараметр("ТорговыйПредставитель", Константы.ТекущийПользователь.Получить().ФизЛицо);
			ВыборкаТерритория = ЗапросТерритория.Выполнить().Выбрать();
			Если ВыборкаТерритория.Следующий() Тогда
				текТерритория = ВыборкаТерритория.Территория;
				Выполнить( "ЭтаФорма.Поле_" + ИД + " = текТерритория;" );
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСледующийВопрос()
	
	Если ТекущийВопрос = Справочники.ВопросыАнкетДляТП.ПустаяСсылка() Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВопросыАнкетДляТП.Ссылка
			|ИЗ
			|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
			|ГДЕ
			|	ВопросыАнкетДляТП.Владелец = &Шаблон
			|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВопросыАнкетДляТП.Код";
		Запрос.УстановитьПараметр("Шаблон",Объект.ШаблонАнкеты);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕСли;
		
	Иначе	
		
		
		ИД      = СтрЗаменить(Строка(ТекущийВопрос.Ссылка.УникальныйИдентификатор()),"-","_");
		ПолеПредыдущегоВопроса = Элементы.Найти("Поле_" + ИД);
		ОтветНаВопрос = ЭтаФорма[ПолеПредыдущегоВопроса.ПутьКДанным];
		
		//Запишем ответ
		ЗаписатьОтветОчередногоВопроса(ОтветНаВопрос);
		
		
		//Проверим Ответ на завершение
		СтрВариантовОтвета = ТекущийВопрос.ВариантыОтветов.Найти(ОтветНаВопрос, "ВариантОтвета");
		
		Если СтрВариантовОтвета <> НЕопределено Тогда
			Если СтрВариантовОтвета.ЗакончитьАнкетирование Тогда
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		
		
		
		
		//Найдем следующий по родителю с учетом варианта ответа.
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ВопросыАнкетДляТП.Ссылка
			|ИЗ
			|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
			|ГДЕ
			|	ВопросыАнкетДляТП.Владелец = &Шаблон
			|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
			|	И ВопросыАнкетДляТП.Родитель = &Родитель
			|	И ВопросыАнкетДляТП.ОтветРодителя = &ОтветРодителя
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВопросыАнкетДляТП.Код";
		Запрос.УстановитьПараметр("Шаблон",Объект.ШаблонАнкеты);
		Запрос.УстановитьПараметр("Родитель", ТекущийВопрос);
		Запрос.УстановитьПараметр("ОтветРодителя",ОтветНаВопрос);
		
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
		
		
		//Найдем следующий вопрос не зависящий от предыдущего
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВопросыАнкетДляТП.Ссылка
			|ИЗ
			|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
			|ГДЕ
			|	ВопросыАнкетДляТП.Владелец = &Шаблон
			|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
			|	И ВопросыАнкетДляТП.Родитель = &ПустойРодитель
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВопросыАнкетДляТП.Код";
		Запрос.УстановитьПараметр("Шаблон",Объект.ШаблонАнкеты);
		Запрос.УстановитьПараметр("ПустойРодитель",Справочники.ВопросыАнкетДляТП.ПустаяСсылка());
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.Ссылка = ТекущийВопрос ТОгда
				Если Выборка.Следующий() Тогда
					Возврат Выборка.Ссылка;
				Иначе
					Возврат Неопределено;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат неопределено;
	
Конецфункции

//Записывает ответ в таблицу
//Если ответ уже был, то сравниваем его сновым ответом
//Если совпадает то не меняем, если нет - то заменяем и очищаем все последующие ответы, т.к. может измениться последовательность
Процедура ЗаписатьОтветОчередногоВопроса(ОтветНаВопрос)
	
	мТЗ_Ответов = ЭтаФорма.ТЗ_Ответов;
	
	МассивСтрок = мТЗ_Ответов.НайтиСтроки(Новый Структура("Вопрос", ТекущийВопрос));
	
	Если МассивСтрок.Количество() > 0 Тогда
		
		Если МассивСтрок[0].Ответ = ОтветНаВопрос Тогда
			
			//Ничего не делаем
			
		Иначе
			
			Индекс = мТЗ_Ответов.Индекс(МассивСтрок[0]);
			МассивКУдалению = Новый Массив;
			Для каждого Стр из мТЗ_Ответов Цикл
				Если мТЗ_Ответов.Индекс(Стр) > Индекс Тогда
					МассивКУдалению.Добавить(Стр);
				КонецЕСли;
			КонецЦикла;
			
			Для каждого Стр Из МассивКУдалению Цикл
				мТЗ_Ответов.Удалить(Стр);
			КонецЦикла;
			
			ЭтаФорма.КоманднаяПанель.Доступность = Ложь;
			
		КонецЕсли;
		
	Иначе
		
		ПолученныйОтвет = ЭтаФорма.ТЗ_Ответов.Добавить();
		ПолученныйОтвет.Вопрос = ТекущийВопрос;
		ПолученныйОтвет.Ответ = ОтветНаВопрос;
		
	КонецЕсли;
	
КонецПроцедуры

//Удалим ранее созданные элементы
Процедура УдалитьВсеЭлементыСАнкеты()
	
	МассивКУдалению = Новый Массив;
	Для каждого эл из Элементы.ГруппаАнкета.ПодчиненныеЭлементы Цикл
		МассивКУдалению.Добавить(эл);
	КонецЦикла;
	Для каждого Эл из МассивКУдалению Цикл
		Элементы.Удалить(эл);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросВперед(Команда)
	
	ВывестиВопросНаФорму();
	Элементы.ВопросНазад.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросНазад(Команда)
	
	ВопросНазадНаСервере()	
	
КонецПроцедуры

//Процедура находит текущий вопрос в таблице ответов и переходит на один назад
//Если ответа на текущий вопрос еще нет то берем последний из таблицы ответов
Процедура ВопросНазадНаСервере()
	
	Элементы.ВопросВперед.Доступность = Истина;
	ЭтаФорма.КоманднаяПанель.Доступность = Ложь;
	
	Если ЭтаФорма.ТЗ_Ответов.Количество() <2 Тогда
		Элементы.ВопросНазад.Доступность = Ложь;
	КонецЕсли;
		
	
	ВопросИЗТЗ = Неопределено;
	
	МассивСтрок = ЭтаФорма.ТЗ_Ответов.НайтиСтроки(Новый Структура("Вопрос", ТекущийВопрос));
	
	Если МассивСтрок.Количество() = 0 Тогда
		
		//берем последний
		Если ЭтаФорма.ТЗ_Ответов.Количество() > 0 ТОгда
			
			СтрокаТЗВопросов = ЭтаФорма.ТЗ_Ответов[ЭтаФорма.ТЗ_Ответов.Количество()-1];
			ВопросИЗТЗ = СтрокаТЗВопросов.Вопрос;
			
		КонецЕсли;
		
	Иначе
		
		ИндексСтроки = ЭтаФорма.ТЗ_Ответов.Индекс(МассивСтрок[0]);
		
		Если ИндексСтроки > 0 Тогда
			
			СтрокаТЗВопросов = ЭтаФорма.ТЗ_Ответов[ИндексСтроки-1];
			ВопросИЗТЗ = СтрокаТЗВопросов.Вопрос;
			
		Иначе
			
			Возврат;
			
		КонецЕсли;
		
		Если ИндексСтроки < 2 Тогда
			Элементы.ВопросНазад.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ВывестиВопросНаФорму(ВопросИЗТЗ);
	
КонецПроцедуры

#КОНЕЦОБЛАСТИ

&НаСервере
Процедура ЗагрузитьТекущиеЗначенияСервер()
	РЗ             = Объект.Ответы.Выгрузить();
	СписокВопросов = РЗ.Скопировать(,"Вопрос");
	СписокВопросов.Свернуть("Вопрос");
	СтрокиКУдалению = Новый Массив;
	Для Каждого СтрокаВопрос Из СписокВопросов Цикл
		ИмяЭл = "Поле_" + СтрЗаменить(Строка(СтрокаВопрос.Вопрос.УникальныйИдентификатор()),"-","_");
		ИскомыеСтроки = Объект.Ответы.НайтиСтроки(Новый Структура("Вопрос",СтрокаВопрос.Вопрос));	
		ТекПредставление = "";
		Для Каждого ИскомаяСтрока Из ИскомыеСтроки Цикл
			ИскомыйЭлемент = ЭтаФорма.Элементы.Найти(ИмяЭл);
			//Если ИскомыйЭлемент = Неопределено Тогда
			//	СтрокиКУдалению.Добавить(ИскомаяСтрока);
			//	Продолжить;
			//КонецЕсли;	
			мЗначение = ЭтаФорма[ИмяЭл];
			Если ТипЗнч(мЗначение) = Тип("ДанныеФормыКоллекция") Тогда
				НоваяСтрока = мЗначение.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ИскомаяСтрока);
				ТекПредставление = ТекПредставление + ?(ПустаяСтрока(ТекПредставление),"",", ") + ИскомаяСтрока.Ответ + ?(ПустаяСтрока(ИскомаяСтрока.Пояснение),"",":" + ИскомаяСтрока.Пояснение);
			Иначе
				ЭтаФорма[ИмяЭл] = ИскомаяСтрока.Ответ;
			КонецЕсли;	
		КонецЦикла;	
		Если Не ПустаяСтрока(ТекПредставление) Тогда
			ЭтаФорма[ИмяЭл + "_Представление"] = ТекПредставление;			
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбщийМодульКлиент.ЗафиксироватьМестоположение(Объект.Ссылка,"Анкета");
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//ТекущийОбъект.Ответы.Очистить();
	//Запрос       = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ВопросыАнкетДляТП.Ссылка,
	//|	ВопросыАнкетДляТП.Наименование,
	//|	ВопросыАнкетДляТП.ПроверкаЗаполнения,
	//|	ВопросыАнкетДляТП.ТипСправочника
	//|ИЗ
	//|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
	//|ГДЕ
	//|	ВопросыАнкетДляТП.Владелец = &Шаблон
	//|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ВопросыАнкетДляТП.Код";
	//Запрос.УстановитьПараметр("Шаблон", ТекущийОбъект.ШаблонАнкеты);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	ИД = СтрЗаменить(Строка(Выборка.Ссылка.УникальныйИдентификатор()),"-","_");
	//	мЗначение = ЭтаФорма["Поле_" + ИД];
	//	Если ТипЗнч(мЗначение) = Тип("ДанныеФормыКоллекция") Тогда
	//		Для Каждого СтрокаТЧ Из мЗначение Цикл
	//			НоваяСтрока = ТекущийОбъект.Ответы.Добавить();
	//			НоваяСтрока.Вопрос = Выборка.Ссылка;
	//			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ, "Ответ,Пояснение");
	//		КонецЦикла;
	//		Если Выборка.ПроверкаЗаполнения И ЗначениеЗаполнено(НоваяСтрока.Вопрос) И Не ЗначениеЗаполнено(НоваяСтрока.Ответ) Тогда
	//			Отказ = Истина;
	//			Сообщение = Новый СообщениеПользователю;
	//			Сообщение.Поле = "ЭтаФорма.Поле_" + ИД;
	//			Сообщение.Текст = "Не заполнено поле """ + СокрЛП(Выборка.Наименование) + """";
	//			Сообщение.УстановитьДанные( ТекущийОбъект );
	//			Сообщение.Сообщить();
	//		КонецЕсли;
	//	Иначе
	//		НоваяСтрока = ТекущийОбъект.Ответы.Добавить();
	//		НоваяСтрока.Вопрос = Выборка.Ссылка;
	//		НоваяСтрока.Ответ = мЗначение;
	//		Если Выборка.ПроверкаЗаполнения И ЗначениеЗаполнено(НоваяСтрока.Вопрос) И Не ЗначениеЗаполнено(НоваяСтрока.Ответ) Тогда
	//			Отказ = Истина;
	//			Сообщение = Новый СообщениеПользователю;
	//			Сообщение.Поле = "ЭтаФорма.Поле_" + ИД;
	//			Сообщение.Текст = "Не заполнено поле """ + СокрЛП(Выборка.Наименование) + """";
	//			Сообщение.УстановитьДанные( ТекущийОбъект );
	//			Сообщение.Сообщить();
	//		КонецЕсли;
	//	КонецЕсли;	
	//КонецЦикла;
	
	
	
	
	
	ТекущийОбъект.Ответы.Очистить();
	
	Если ТекущийОбъект.ШаблонАнкеты.ВопросыВыводитьПоОчереди Тогда
		
		Выборка = ЭтаФорма.ТЗ_Ответов;
		
	Иначе
	
		Запрос       = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВопросыАнкетДляТП.Ссылка КАК Вопрос,
		|	ВопросыАнкетДляТП.Наименование,
		|	ВопросыАнкетДляТП.ПроверкаЗаполнения,
		|	ВопросыАнкетДляТП.ТипСправочника
		|ИЗ
		|	Справочник.ВопросыАнкетДляТП КАК ВопросыАнкетДляТП
		|ГДЕ
		|	ВопросыАнкетДляТП.Владелец = &Шаблон
		|	И НЕ ВопросыАнкетДляТП.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВопросыАнкетДляТП.Код";
		Запрос.УстановитьПараметр("Шаблон", ТекущийОбъект.ШаблонАнкеты);
	
		Выборка = Запрос.Выполнить().Выгрузить();
		
	КонецЕСли;
		
		
	Для каждого Стр из Выборка Цикл
		ИД = СтрЗаменить(Строка(Стр.Вопрос.УникальныйИдентификатор()),"-","_");
		мЗначение = ЭтаФорма["Поле_" + ИД];
		Если ТипЗнч(мЗначение) = Тип("ДанныеФормыКоллекция") Тогда
			Для Каждого СтрокаТЧ Из мЗначение Цикл
				НоваяСтрока = ТекущийОбъект.Ответы.Добавить();
				НоваяСтрока.Вопрос = Стр.Вопрос;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ, "Ответ,Пояснение");
			КонецЦикла;
			Если Стр.Вопрос.ПроверкаЗаполнения И ЗначениеЗаполнено(НоваяСтрока.Вопрос) И Не ЗначениеЗаполнено(НоваяСтрока.Ответ) Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Поле = "ЭтаФорма.Поле_" + ИД;
				Сообщение.Текст = "Не заполнено поле """ + СокрЛП(Стр.Вопрос) + """";
				Сообщение.УстановитьДанные( ТекущийОбъект );
				Сообщение.Сообщить();
			КонецЕсли;
		Иначе
			НоваяСтрока = ТекущийОбъект.Ответы.Добавить();
			НоваяСтрока.Вопрос = Стр.Вопрос;
			НоваяСтрока.Ответ = мЗначение;
			Если Стр.Вопрос.ПроверкаЗаполнения И ЗначениеЗаполнено(НоваяСтрока.Вопрос) И Не ЗначениеЗаполнено(НоваяСтрока.Ответ) Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Поле = "ЭтаФорма.Поле_" + ИД;
				Сообщение.Текст = "Не заполнено поле """ + СокрЛП(Стр.Вопрос) + """";
				Сообщение.УстановитьДанные( ТекущийОбъект );
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

#ОБЛАСТЬ ПРИСОЕДИНЕННЫЕФАЙЛЫ

&НаКлиенте
Процедура ДобавитьФайл()
	
	ПараметрыФайла = ДополнительныеФункцииКлиент.ПрисоединенныеФайлы_ДобавитьФайл(ЭтаФорма);
	
	Если ТипЗнч(ПараметрыФайла) = Тип("Структура") Тогда
	
		ДопПараметры = Новый Структура();
		ДопПараметры.Вставить("ПутьКФайлу", ПараметрыФайла.ПутьКФайлу);
		ДопПараметры.Вставить("Расширение", ПараметрыФайла.Расширение);
		ДопПараметры.Вставить("Форма", ЭтаФорма);
						
		Оп = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияФормыИзображения", ЭтотОбъект, ДопПараметры);
		ОткрытьФорму("ОбщаяФорма.ФормаИзображения", Новый Структура("ПутьКФайлу", ПараметрыФайла.ПутьКФайлу),Этаформа,,,,Оп,);
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияФормыИзображения(Результат, ДопПараметры) Экспорт
	
	Если Результат = Истина Тогда 
		ДополнительныеФункцииКлиент.ДобавитьФайлВТаблицуПрисоединенных(Результат, ДопПараметры);
		ОбновитьРеквизитыФормы();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьФайл()
	ДополнительныеФункцииКлиент.ПрисоединенныеФайлы_УдалитьФайл(ЭтаФорма);
	ОбновитьРеквизитыФормы();
КонецПроцедуры	

&НаСервере
Процедура ОбновитьРеквизитыФормы()  
	ДополнительныеФункцииСервер.ПрисоединенныеФайлы_ОбновитьРеквизитыФормы(ЭтаФорма);	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	//Если ЭтаФорма.Элементы.Найти("Таблица_ПрисоединенныеФайлы") <> Неопределено Тогда
		ДополнительныеФункцииСервер.ПрисоединенныеФайлы_СохранитьПрисоединенныеФайлы(ЭтаФорма);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодгрузитьФото(Элемент, ТекущаяСтраница)
	
	ПодгрузитьФотоНаСервере(ТекущаяСтраница.Имя)
	
КонецПроцедуры

&НаСервере
Процедура ПодгрузитьФотоНаСервере(ТекущаяСтраницаИмя)
	
	ДополнительныеФункцииСервер.ПодгрузитьФотоНаСервере(ТекущаяСтраницаИмя, ЭтаФорма)
	
КонецПроцедуры

#КОНЕЦОБЛАСТИ
