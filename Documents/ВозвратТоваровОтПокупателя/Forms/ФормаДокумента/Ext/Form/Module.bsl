// КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	ОбновитьНадписьТовары();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбновитьНадписьТовары();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ДобавитьТовар();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТовар()	
	Парам = Новый Структура("ТипЦен,АдресХранилищаТоваров,Контрагент,ДатаДоставки,Посещение,ДоговорКонтрагента,ТекДокумент",Объект.ТипЦен,ПолучитьАдресХранилищаТоваров(),Объект.Контрагент,Объект.ДатаДоставки,Объект.Посещение,Объект.ДоговорКонтрагента,Объект.Ссылка);
	Парам.Вставить("ЭтоВозврат", Истина);
	
	// 2017-05-03 МСН
	НоваяФорма = ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", Парам, ЭтаФорма);
	Попытка
		НоваяФорма.Элементы.КомандаСохранить.Заголовок = "Сохранить возврат"
	Исключение
	КонецПопытки;
	//ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", Парам, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ДобавленыТовары" И Источник.ВладелецФормы = ЭтаФорма Тогда
		ЗагрузитьТоварыИзХранилища(Параметр);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И Объект.Товары.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(Объект.ПричинаВозврата) Тогда
		Отказ = Истина;
		Сообщить("Не указана причина возврата");
		Возврат;
	ИначеЕсли СокрЛП(Объект.ПричинаВозврата) = "Иная причина" И (ПустаяСтрока(Объект.Комментарий)) Тогда
	//ИначеЕсли СокрЛП(Объект.ПричинаВозврата) = "Иная причина" И (ПустаяСтрока(Объект.Комментарий) Или СтрДлина(Объект.Комментарий) < 10) Тогда
		Отказ = Истина;
		Сообщить("Не заполнен комментарий");
		Возврат;
	КонецЕсли;		
КонецПроцедуры

// СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ //

&НаСервере
Процедура ОбновитьИсториюПродажТоваров ()
	ДополнительныеФункцииСервер.ЗаполнитьИсториюПродажТоваров(ЭтаФорма,Объект.Товары,Объект.Контрагент,Объект.ДатаДоставки,Объект.Ссылка);		
КонецПроцедуры	

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьИсториюПродажТоваров();
КонецПроцедуры

// ПОДКЛЮЧАЕМЫЕ ПРОЦЕДУРЫ //

&НаСервере
Процедура ЗагрузитьТаблицуДопРеквизитов (Адрес)
	Если ЭтоАдресВременногоХранилища(Адрес) Тогда
		Объект.ДополнительныеРеквизиты.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Функция АдресТаблицыДопРеквизитов ()  Экспорт
	Возврат ПоместитьВоВременноеХранилище(Объект.ДополнительныеРеквизиты.Выгрузить());
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// 2017-05-02 МСН
	Если Параметры.Свойство("Ссылка") И ТипЗнч(Параметры.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ЗначениеВРеквизитФормы(Параметры.Ссылка.ПолучитьОбъект(), "Объект");
	КонецЕсли;
	
	//Если Объект.Проведен Тогда
	//	ЭтаФорма.ТолькоПросмотр = Истина;
	//КонецЕсли;	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный      = Константы.ТекущийПользователь.Получить();
		Объект.ДоговорКонтрагента = Объект.Контрагент.ОсновнойДоговор;
		Объект.ТипЦен             = ДополнительныеФункцииСервер.ПолучитьАктуальныйДоговорКонтрагента(Объект.Контрагент).ТипЦен;
	КонецЕсли;	
	Заголовок = "Возврат на " + ОбщийМодульСервер.ФорматДаты(Объект.ДатаДоставки, Истина) + " контрагент: " + Объект.Контрагент;
	ОбновитьИсториюПродажТоваров();
	ОбновитьНадписьТовары();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНадписьТовары ()
	Элементы.НадписьДобавьте.Видимость = Объект.Товары.Количество() = 0;
КонецПроцедуры	

&НаСервере
Функция ПолучитьАдресХранилищаТоваров ()
	Рез = Объект.Товары.Выгрузить();
	Рез.Колонки.Добавить("ПроцентСкидкиНаценки");
	Возврат ПоместитьВоВременноеХранилище(Рез,ЭтаФорма.УникальныйИдентификатор);
КонецФункции	

&НаСервере
Процедура ЗагрузитьТоварыИзХранилища(Параметр)
	Если ТипЗнч(Параметр) = Тип("Массив") Тогда
		Объект.Товары.Очистить();
		Для каждого структСтроки Из Параметр Цикл
			Если ТипЗнч(структСтроки) = Тип("Структура") Тогда
				ЗаполнитьЗначенияСвойств(Объект.Товары.Добавить(), структСтроки);
			КонецЕсли;
		КонецЦикла;
		ОбновитьИсториюПродажТоваров();
		Для Каждого СтрокаТЧ Из Объект.Товары Цикл
			СтрокаТЧ.ЕдиницаИзмерения = СтрокаТЧ.Номенклатура.ЕдиницаХраненияОстатков;
		КонецЦикла;	
		Если Объект.Товары.Количество() > 0 Тогда
			Модифицированность = Истина;
		КонецЕсли;
		
	ИначеЕсли ЭтоАдресВременногоХранилища(Параметр) Тогда
		Объект.Товары.Загрузить(ПолучитьИзВременногоХранилища(Параметр));
		ОбновитьИсториюПродажТоваров();
		Для Каждого СтрокаТЧ Из Объект.Товары Цикл
			СтрокаТЧ.ЕдиницаИзмерения = СтрокаТЧ.Номенклатура.ЕдиницаХраненияОстатков;
		КонецЦикла;	
		Если Объект.Товары.Количество() > 0 Тогда
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;	
	ОбновитьНадписьТовары();
КонецПроцедуры	

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	
	Парам = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Цена,ЕдиницаИзмерения");
	ЗаполнитьЗначенияСвойств(Парам,ТекСтрока);
	
	Парам.Вставить("Контрагент"        ,Объект.Контрагент);
	Парам.Вставить("КоличествоЗаказано",ТекСтрока.Количество);
	Парам.Вставить("СуммаЗаказано"     ,ТекСтрока.Сумма);
	Парам.Вставить("ЭтоВозврат"        ,Истина);
	
	СтандартнаяОбработка = ЛОЖЬ;
	
	ДополнительныеПараметры = Новый Структура("ТекСтрока",ТекСтрока);
	ОписаниеОповещения   = Новый ОписаниеОповещения("ТоварыВыборЗавершение",ЭтаФорма,ДополнительныеПараметры);
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВводаПараметровНоменклатуры",Парам,,,,,ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыборЗавершение (Рез, ДополнительныеПараметры) Экспорт
	Если Рез <> Неопределено Тогда
		Если Рез.КоличествоЗаказано = 0 Тогда
			Объект.Товары.Удалить(ДополнительныеПараметры.ТекСтрока.НомерСтроки-1);
		Иначе
			ТекСтрока = ДополнительныеПараметры.ТекСтрока;
			ЗаполнитьЗначенияСвойств(ТекСтрока,Рез);
			ТекСтрока.Количество = Рез.КоличествоЗаказано;
			ТекСтрока.Сумма      = ТекСтрока.Цена * ТекСтрока.Количество; //* (1 - ТекСтрока.ПроцентСкидкиНаценки / 100);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры	

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("НовыйЗаказ");
	ОбщийМодульКлиент.ЗафиксироватьМестоположение(Объект.Ссылка, "Оформлен возврат");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПодключитьОбработчикОжидания("ДобавитьТовар", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры
