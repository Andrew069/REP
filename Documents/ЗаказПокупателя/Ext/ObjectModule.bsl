
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	МассивСтрокДляУдаления = Новый Массив;
	Для Каждого Строка из Товары Цикл 
		Если Строка.Количество = 0 Тогда
			МассивСтрокДляУдаления.Добавить(Строка);
			//Сообщить("В строке " + Строка.НомерСтроки + " не заполнено количество. Запись невозможна");
			//Отказ = Истина;
			//Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка из МассивСтрокДляУдаления Цикл
		Товары.Удалить(Строка);
	КонецЦикла;
		
	Если РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	ТорговыйПредставитель = Ответственный.ФизЛицо;
	СуммаДокумента = Товары.Итог("Сумма");
	КоличествоSKU = Товары.Количество();
	
	Если Товары.Количество() = 0 Тогда
		Сообщить("Запись ""пустых"" заказов запрещена!");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидЗаказа) Тогда
	ИначеЕсли Предзаказ Тогда
		ВидЗаказа = Перечисления.ВидыЗаказов.ПредварительныйЗаказ;
	Иначе
		ВидЗаказа = Перечисления.ВидыЗаказов.ОбычныйЗаказ;
	КонецЕсли;
	
	Если ВидЗаказа = Перечисления.ВидыЗаказов.ЗаказНаОтгрузкуБонусаПоВозвратам И Не ФБ_ОтдельнаяНакладная Тогда
		ФБ_ОтдельнаяНакладная = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ВидЗаказа = Перечисления.ВидыЗаказов.ЗаказНаОтгрузкуБонусаПоВозвратам Тогда
		РегистрыСведений.ВыполнениеЗаданийТП.ОтметитьВыполнениеЗаданияТП( Посещение.Маршрут, Контрагент, "ЗаказНаБонусЗаВозврат", Ссылка );
	ИначеЕсли Предзаказ Тогда
		РегистрыСведений.ВыполнениеЗаданийТП.ОтметитьВыполнениеЗаданияТП( Посещение.Маршрут, Контрагент, "ПредварительныйЗаказ", Ссылка );
	Иначе
		РегистрыСведений.ВыполнениеЗаданийТП.ОтметитьВыполнениеЗаданияТП( Посещение.Маршрут, Контрагент, "Заказ", Ссылка );
	КонецЕсли;
	
	Если ВидЗаказа = Перечисления.ВидыЗаказов.ЗаказНаОтгрузкуБонусаПоВозвратам Тогда
		// регистр Балмико_ТоварныйБонус 
		Движения.Балмико_ТоварныйБонус.Записывать = Истина;
		Движение = Движения.Балмико_ТоварныйБонус.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.ВидТоварногоБонуса = Перечисления.Балмико_ВидыТоварногоБонуса.БонусТоваромЗаВозврат;
		Движение.Сумма = -СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	РегистрыСведений.ВыполнениеЗаданийТП.УдалитьВыполнениеЗаданияТП( Ссылка );
	
КонецПроцедуры
